{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"source/images/eslint.png","path":"images/eslint.png","modified":0,"renderable":0},{"_id":"source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":0},{"_id":"source/images/huhu.png","path":"images/huhu.png","modified":0,"renderable":0},{"_id":"source/images/iframe-example.png","path":"images/iframe-example.png","modified":0,"renderable":0},{"_id":"source/images/lint.png","path":"images/lint.png","modified":0,"renderable":0},{"_id":"source/images/logo.jpeg","path":"images/logo.jpeg","modified":0,"renderable":0},{"_id":"source/images/prettier.png","path":"images/prettier.png","modified":0,"renderable":0},{"_id":"source/images/top.png","path":"images/top.png","modified":0,"renderable":0},{"_id":"source/images/vuecli.png","path":"images/vuecli.png","modified":0,"renderable":0},{"_id":"source/images/weixin.png","path":"images/weixin.png","modified":0,"renderable":0},{"_id":"source/images/zhifubao.png","path":"images/zhifubao.png","modified":0,"renderable":0},{"_id":"themes/drops/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/drops/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/drops/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/drops/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/drops/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/drops/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/drops/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/.gitignore","hash":"ea2b285a29690f1eabbad0f3a158e34e9ccd1d86","modified":1579239533432},{"_id":"themes/landscape/Gruntfile.js","hash":"412e30530784993c8997aa8b1319c669b83b91c2","modified":1579239533433},{"_id":"themes/landscape/LICENSE","hash":"82ce1e15ddeabeaaca60e2186b5a3ce42b1a9c49","modified":1579239533434},{"_id":"themes/landscape/README.md","hash":"67fedfb66304f103c412f6be110bf3c40c75d4ac","modified":1579239533435},{"_id":"themes/landscape/_config.yml","hash":"ce9d2939245209b8f5c5bbbdadc917d86057d032","modified":1579239533437},{"_id":"themes/landscape/package.json","hash":"6e567a9654e61eb3f548c75edef380c2e135c433","modified":1579239533473},{"_id":"themes/landscape/languages/de.yml","hash":"d45cea36c5c83d7d09afcd1c26fff4a4c513c25b","modified":1579239533437},{"_id":"themes/landscape/languages/es.yml","hash":"e3b4937da4cd2d0393b8a0ba310e70fc605cc431","modified":1579239533439},{"_id":"themes/landscape/languages/fr.yml","hash":"8cb0fe4b6913b4d5b662cdd0108a923c90025f85","modified":1579239533440},{"_id":"themes/landscape/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1579239533438},{"_id":"themes/landscape/languages/ja.yml","hash":"3e2fedca096678c0c234ebffa4637828979296fa","modified":1579239533441},{"_id":"themes/landscape/languages/ko.yml","hash":"11330316e3c1262474a2b496e40dbc29f93fe01b","modified":1579239533442},{"_id":"themes/landscape/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1579239533443},{"_id":"themes/landscape/languages/pt.yml","hash":"ae2c61b30e638f74f1a42c9ce39ac08d063b30f5","modified":1579239533444},{"_id":"themes/landscape/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1579239533443},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1579239533468},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1579239533469},{"_id":"themes/landscape/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1579239533445},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1579239533469},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1579239533446},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1579239533446},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1579239533472},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1579239533473},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1579239533471},{"_id":"themes/landscape/scripts/fancybox.js","hash":"4c130fc242cf9b59b5df6ca5eae3b14302311e8c","modified":1579239533475},{"_id":"themes/landscape/layout/layout.ejs","hash":"5d86bc48b0f1bdce9a2bb548c2f8e7a4f50d499a","modified":1579239533470},{"_id":"source/_posts/hello-world.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1579239276675},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"5e3b70c028d518b8f765e29a5e2020e7ba6ed589","modified":1579239533449},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"5062c723721d8497eebad372f57092ade45041f4","modified":1579239533449},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"017c412bd3d60d22e493f02918e436a32d96bb84","modified":1579239533450},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"5cf2b8a1148e6f8c4bd9ca9e3b84c7e5a59d56bc","modified":1579239533451},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"6faefe07f3d64e21c7743276e0f55ee1544f9d86","modified":1579239533452},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"ace3000bd3e01d03041d5be24f7640b6c003a5b5","modified":1579239533453},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1579239533454},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"a36cec48782782bac92622f369c750e5c7396510","modified":1579239533454},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"cf755454675d13a0813a922b575c06b6b74ab9fd","modified":1579239533455},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"347cf1befd2ea637c24bd5901929d8e36e359e75","modified":1579239533456},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"c70869569749a8f48cce202fa57926c06b55fdab","modified":1579239533462},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"866790acc13fed44b7ef74c3e19c300a3d6180d8","modified":1579239533464},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"16800f85ffb036d2644a26e02facd61acb3706e9","modified":1579239533465},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"0fe1e52c291c9499bd05b966e0b9aac5be351c58","modified":1579239533463},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"6017c54a8c3c8ff8db491cfbea3100c139da75d6","modified":1579239533466},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"7259c179aa0c41c02e467ad892292e90430aaabc","modified":1579239533467},{"_id":"themes/landscape/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1579239533477},{"_id":"themes/landscape/source/css/_variables.styl","hash":"57bb02270eef16b4823a64ba663ccf2f247f34e5","modified":1579239533489},{"_id":"themes/landscape/source/css/style.styl","hash":"4a3e64ee8dad5834860c30b4176882eff628ca6b","modified":1579239533501},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1579239533504},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1579239533503},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1579239533505},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1579239533506},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1579239533507},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1579239533507},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"2e54d51d21e68ebc4bb870f6e57d3bfb660d4f9c","modified":1579239533514},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1579239533517},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"58193c802f307ec9bc9e586c0e8a13ebef45d2f8","modified":1579239533516},{"_id":"themes/landscape/source/js/script.js","hash":"c0d368681c687258b628bacc84cc30d353de6d47","modified":1579239533518},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"16128d2422645e18d1b6882d4c4df17d895bd76e","modified":1579239533457},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":1579239533458},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1579239533459},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"cbb3819ce512bd24db8bad41b8617d46eba82fdc","modified":1579239533460},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1579239533460},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1579239533461},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"9e574d8eb1a5285ec3b4346607414770d2f7e0ff","modified":1579239533478},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"e291bc8c5f0c21080baa549d5d9ef2f39a871ea7","modified":1579239533479},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"2834870661e490775f9154d71638bfdc72e640a6","modified":1579239533480},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"6f7aa810f296d6a1a4486637b5a853d35a198938","modified":1579239533481},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1579239533482},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"ac19f1621305ca9f6a7b74acd211a4c0d88690bd","modified":1579239533483},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"1fb15f13ba70d5b954f62920c6b63d26e2fb2985","modified":1579239533484},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"680c7b809b62cd3ad294e822793fbd0b1a32cc33","modified":1579239533483},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"4132e25ba9680c4b911a01abc75f501cda3fa4f1","modified":1579239533485},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"8d971a00e644a600179b04815688d188f094012e","modified":1579239533486},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1579239533487},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1579239533488},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1579239533493},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1579239533491},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1579239533497},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1579239533509},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1579239533510},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1579239533511},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1579239533512},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1579239533513},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1579239533513},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1579239533496},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1579239533500},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1579239533495},{"_id":"public/2020/01/17/hello-world/index.html","hash":"023b378847d15a3e78c2f44c8b1d199a36553459","modified":1579251197120},{"_id":"public/archives/index.html","hash":"6fd34773e8e21957620914e82cfbb34ab8ca7cca","modified":1579251197120},{"_id":"public/archives/2020/index.html","hash":"6fd34773e8e21957620914e82cfbb34ab8ca7cca","modified":1579251197120},{"_id":"public/archives/2020/01/index.html","hash":"6fd34773e8e21957620914e82cfbb34ab8ca7cca","modified":1579251197120},{"_id":"public/index.html","hash":"7ae8ba02649dc565c921cdf0b0ab90b4a17fe22f","modified":1579251197120},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1579239578168},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1579239578168},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1579239578168},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1579239578168},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1579239578168},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1579239578168},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1579239578168},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1579239578168},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1579239578168},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1579239578168},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1579239578168},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1579239578168},{"_id":"public/css/style.css","hash":"bc4c9f876fe71a4a72b698350943eb26faf937a1","modified":1579251197120},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1579239578168},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1579239578168},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1579239578168},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1579239578168},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1579239578168},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1579239578168},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1579239578168},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1579239578168},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1579239578168},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1579239578168},{"_id":"source/images/favicon.ico","hash":"166907605ffff456125b4978bb81eca715cc1bb9","modified":1579229068640},{"_id":"source/images/lint.png","hash":"678c2de3397fef61f0abdd87579441b57b738d1c","modified":1579145763199},{"_id":"source/images/logo.jpeg","hash":"037ebeaa24db27cf039ad42e9887c4b63e7c0e61","modified":1579229068640},{"_id":"source/images/top.png","hash":"413700042fdd69144c69870df2a7a5e811d5baae","modified":1579229068640},{"_id":"source/images/prettier.png","hash":"3a742cc258f15cbf1b51afc3ab1f9c8679e15a99","modified":1579144307588},{"_id":"source/images/eslint.png","hash":"5bd6db28753c5808d83a2caa9de9981d12505367","modified":1579144302242},{"_id":"source/images/iframe-example.png","hash":"ce1620c8ff14e8c4614e46ec3cfddf05b5e0fa72","modified":1579162562781},{"_id":"source/images/huhu.png","hash":"c6edcdd4eb5ce273044da9028cb6b69b5ff6d351","modified":1579229069282},{"_id":"source/images/vuecli.png","hash":"eaf210444a1ea41846bb835a9cfbfb953bfa46bf","modified":1579146484708},{"_id":"source/images/zhifubao.png","hash":"e5e934956dadfd3e65c48131f0c6b7d42ccf0c6c","modified":1579229068640},{"_id":"source/images/weixin.png","hash":"fb6200b64e5812aba2c092916af296bf3ed27873","modified":1579229068640},{"_id":"source/_posts/vue项目中使用eslint-prettier规范与检查代码.md","hash":"d0bcbf5ede83ac15aa91d74fa65f17ac6ba659df","modified":1579239730665},{"_id":"source/_posts/vue 组件内嵌套外部页面的实现与案例分享.md","hash":"bfbe99106f04acf643b0b8a6415fbe10832e0b14","modified":1579239693591},{"_id":"public/2020/01/17/vue 组件内嵌套外部页面的实现与案例分享/index.html","hash":"0e87a28d15cc7e9d24429e437fa2507e03b1095f","modified":1579251197120},{"_id":"public/2020/01/16/vue项目中使用eslint-prettier规范与检查代码/index.html","hash":"d3fa98b04b6fba98b0b9b0b4b066d3380d0893c6","modified":1579251197120},{"_id":"public/images/vuecli.png","hash":"eaf210444a1ea41846bb835a9cfbfb953bfa46bf","modified":1579239739378},{"_id":"public/images/weixin.png","hash":"fb6200b64e5812aba2c092916af296bf3ed27873","modified":1579239739378},{"_id":"public/images/zhifubao.png","hash":"e5e934956dadfd3e65c48131f0c6b7d42ccf0c6c","modified":1579239739378},{"_id":"themes/drops/Gruntfile.js","hash":"412e30530784993c8997aa8b1319c669b83b91c2","modified":1579240433768},{"_id":"themes/drops/README.md","hash":"67fedfb66304f103c412f6be110bf3c40c75d4ac","modified":1579240433769},{"_id":"themes/drops/.gitignore","hash":"ea2b285a29690f1eabbad0f3a158e34e9ccd1d86","modified":1579240433769},{"_id":"themes/drops/LICENSE","hash":"82ce1e15ddeabeaaca60e2186b5a3ce42b1a9c49","modified":1579240433769},{"_id":"themes/drops/_config.yml","hash":"9ea52f0b7c6d8c0f2923f2b36acfadf0e0456c99","modified":1579245318461},{"_id":"themes/drops/package.json","hash":"6e567a9654e61eb3f548c75edef380c2e135c433","modified":1579240433769},{"_id":"themes/drops/languages/de.yml","hash":"d45cea36c5c83d7d09afcd1c26fff4a4c513c25b","modified":1579240433790},{"_id":"themes/drops/languages/fr.yml","hash":"8cb0fe4b6913b4d5b662cdd0108a923c90025f85","modified":1579240433906},{"_id":"themes/drops/languages/default.yml","hash":"eb20ff415211180a012ccb75dc7cee34fe155aa7","modified":1579244553118},{"_id":"themes/drops/languages/es.yml","hash":"e3b4937da4cd2d0393b8a0ba310e70fc605cc431","modified":1579240433897},{"_id":"themes/drops/languages/ja.yml","hash":"3e2fedca096678c0c234ebffa4637828979296fa","modified":1579240433909},{"_id":"themes/drops/languages/ko.yml","hash":"11330316e3c1262474a2b496e40dbc29f93fe01b","modified":1579240433912},{"_id":"themes/drops/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1579240433925},{"_id":"themes/drops/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1579240433922},{"_id":"themes/drops/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1579240433929},{"_id":"themes/drops/languages/pt.yml","hash":"ae2c61b30e638f74f1a42c9ce39ac08d063b30f5","modified":1579240433927},{"_id":"themes/drops/languages/zh-CN.yml","hash":"f0e04e35c8c01b563eb6eaa3f87d9527326fd998","modified":1579244675123},{"_id":"themes/drops/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1579240433942},{"_id":"themes/drops/layout/layout.ejs","hash":"9af527b77c051fa92565b04fe6553b6e71e73447","modified":1579249347026},{"_id":"themes/drops/layout/index.ejs","hash":"4e31a8afd9d00ed8a3b62a6250a54aa66ec59f07","modified":1579247900267},{"_id":"themes/drops/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1579240434026},{"_id":"themes/drops/layout/archive.ejs","hash":"68c6d333a0c459bca2ed16dac25bbe7f295fc053","modified":1579247979972},{"_id":"themes/drops/scripts/fancybox.js","hash":"4c130fc242cf9b59b5df6ca5eae3b14302311e8c","modified":1579240433823},{"_id":"themes/drops/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1579240434037},{"_id":"themes/drops/layout/post.ejs","hash":"46205c34fec8f8dbfbe3e8b14aa6e2fb700e2ee8","modified":1579247946677},{"_id":"themes/drops/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1579240434040},{"_id":"themes/drops/layout/_partial/after-footer.ejs","hash":"5e3b70c028d518b8f765e29a5e2020e7ba6ed589","modified":1579240433847},{"_id":"themes/drops/layout/_partial/archive-post.ejs","hash":"5062c723721d8497eebad372f57092ade45041f4","modified":1579240433892},{"_id":"themes/drops/layout/_partial/archive.ejs","hash":"68c6d333a0c459bca2ed16dac25bbe7f295fc053","modified":1579244468600},{"_id":"themes/drops/layout/_partial/article.ejs","hash":"5cf2b8a1148e6f8c4bd9ca9e3b84c7e5a59d56bc","modified":1579240433906},{"_id":"themes/drops/layout/_partial/footer.ejs","hash":"6faefe07f3d64e21c7743276e0f55ee1544f9d86","modified":1579240433911},{"_id":"themes/drops/layout/_partial/gauges-analytics.ejs","hash":"ace3000bd3e01d03041d5be24f7640b6c003a5b5","modified":1579240433914},{"_id":"themes/drops/layout/_partial/head.ejs","hash":"b03c53d3391fca6b3913c5da8a825efc8fdbdcde","modified":1579245451188},{"_id":"themes/drops/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1579240433925},{"_id":"themes/drops/layout/_partial/header.ejs","hash":"0af786241bc8a3066093bbc8e08cd4971fde624f","modified":1579248051635},{"_id":"themes/drops/layout/_partial/mobile-nav.ejs","hash":"347cf1befd2ea637c24bd5901929d8e36e359e75","modified":1579240433939},{"_id":"themes/drops/layout/_partial/sidebar.ejs","hash":"e829279063569ae72f10a8492c52970a9758f08a","modified":1579249463230},{"_id":"themes/drops/layout/_widget/archive.ejs","hash":"0fe1e52c291c9499bd05b966e0b9aac5be351c58","modified":1579240434009},{"_id":"themes/drops/layout/_widget/category.ejs","hash":"866790acc13fed44b7ef74c3e19c300a3d6180d8","modified":1579240434011},{"_id":"themes/drops/layout/_widget/tag.ejs","hash":"6017c54a8c3c8ff8db491cfbea3100c139da75d6","modified":1579240434020},{"_id":"themes/drops/layout/_widget/recent_posts.ejs","hash":"16800f85ffb036d2644a26e02facd61acb3706e9","modified":1579240434013},{"_id":"themes/drops/layout/_widget/tagcloud.ejs","hash":"7259c179aa0c41c02e467ad892292e90430aaabc","modified":1579240434022},{"_id":"themes/drops/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1579240433848},{"_id":"themes/drops/source/css/_variables.styl","hash":"57bb02270eef16b4823a64ba663ccf2f247f34e5","modified":1579240433991},{"_id":"themes/drops/source/css/style.styl","hash":"ca0769d3c35d56eed6b15d17e96a88853b5d5503","modified":1579250675109},{"_id":"themes/drops/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1579240434029},{"_id":"themes/drops/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1579240434036},{"_id":"themes/drops/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1579240434038},{"_id":"themes/drops/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1579240434042},{"_id":"themes/drops/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1579240434074},{"_id":"themes/drops/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1579240434040},{"_id":"themes/drops/source/js/script.js","hash":"c0d368681c687258b628bacc84cc30d353de6d47","modified":1579240434122},{"_id":"themes/drops/source/fancybox/jquery.fancybox.css","hash":"2e54d51d21e68ebc4bb870f6e57d3bfb660d4f9c","modified":1579240434110},{"_id":"themes/drops/source/fancybox/jquery.fancybox.js","hash":"58193c802f307ec9bc9e586c0e8a13ebef45d2f8","modified":1579240434112},{"_id":"themes/drops/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1579240434114},{"_id":"themes/drops/layout/_partial/post/category.ejs","hash":"16128d2422645e18d1b6882d4c4df17d895bd76e","modified":1579240433943},{"_id":"themes/drops/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":1579240433973},{"_id":"themes/drops/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1579240433978},{"_id":"themes/drops/layout/_partial/post/nav.ejs","hash":"cbb3819ce512bd24db8bad41b8617d46eba82fdc","modified":1579240433991},{"_id":"themes/drops/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1579240434003},{"_id":"themes/drops/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1579240433995},{"_id":"themes/drops/source/css/_partial/article.styl","hash":"e291bc8c5f0c21080baa549d5d9ef2f39a871ea7","modified":1579240433906},{"_id":"themes/drops/source/css/_partial/footer.styl","hash":"6f7aa810f296d6a1a4486637b5a853d35a198938","modified":1579240433912},{"_id":"themes/drops/source/css/_partial/archive.styl","hash":"fd944d85d23382f62d2e25805ff52aaf83a12dd4","modified":1579244502862},{"_id":"themes/drops/source/css/_partial/comment.styl","hash":"2834870661e490775f9154d71638bfdc72e640a6","modified":1579240433909},{"_id":"themes/drops/source/css/_partial/header.styl","hash":"cfc616a87c55aaf4bc659f243c758eb5e36914f0","modified":1579248717055},{"_id":"themes/drops/source/css/_partial/highlight.styl","hash":"ac19f1621305ca9f6a7b74acd211a4c0d88690bd","modified":1579240433925},{"_id":"themes/drops/source/css/_partial/mobile.styl","hash":"680c7b809b62cd3ad294e822793fbd0b1a32cc33","modified":1579240433927},{"_id":"themes/drops/source/css/_partial/sidebar-aside.styl","hash":"1fb15f13ba70d5b954f62920c6b63d26e2fb2985","modified":1579240433929},{"_id":"themes/drops/source/css/_partial/sidebar-bottom.styl","hash":"4132e25ba9680c4b911a01abc75f501cda3fa4f1","modified":1579240433939},{"_id":"themes/drops/source/css/_partial/sidebar.styl","hash":"6c2906bf9359a16afda141a14771a2c0e63c9b1a","modified":1579250585108},{"_id":"themes/drops/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1579240433974},{"_id":"themes/drops/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1579240434004},{"_id":"themes/drops/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1579240433978},{"_id":"themes/drops/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1579240434007},{"_id":"themes/drops/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1579240434015},{"_id":"themes/drops/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1579240434091},{"_id":"themes/drops/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1579240434078},{"_id":"themes/drops/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1579240434095},{"_id":"themes/drops/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1579240434099},{"_id":"themes/drops/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1579240434107},{"_id":"themes/drops/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1579240434108},{"_id":"themes/drops/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1579240434012},{"_id":"themes/drops/source/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1579240434010},{"_id":"themes/drops/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1579240434024},{"_id":"themes/drops/layout/_partial/paginator.ejs","hash":"3af6d61e116c7629f6227ce1ad719de9337638dd","modified":1579248071857},{"_id":"themes/drops/layout/_partial/post.ejs","hash":"46205c34fec8f8dbfbe3e8b14aa6e2fb700e2ee8","modified":1579244424090},{"_id":"themes/drops/source/css/_partial/post.styl","hash":"17d000681acce2a4fa045e3c9aaa37a670ff61c4","modified":1579244150539},{"_id":"source/_posts/hello-world copy 12.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1579245500237},{"_id":"source/_posts/hello-world copy 10.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1579245499847},{"_id":"source/_posts/hello-world copy 11.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1579245500033},{"_id":"source/_posts/hello-world copy 2.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1579245498023},{"_id":"source/_posts/hello-world copy 13.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1579245500461},{"_id":"source/_posts/hello-world copy 4.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1579245498551},{"_id":"source/_posts/hello-world copy 3.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1579245498276},{"_id":"source/_posts/hello-world copy 5.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1579245498750},{"_id":"source/_posts/hello-world copy 6.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1579245498950},{"_id":"source/_posts/hello-world copy 7.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1579245499144},{"_id":"source/_posts/hello-world copy 9.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1579245499636},{"_id":"source/_posts/hello-world copy 8.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1579245499368},{"_id":"source/_posts/hello-world copy.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1579245497503},{"_id":"public/2020/01/17/hello-world copy 13/index.html","hash":"9deaeccd72a681d5a77f16e8018e86accd2b91bc","modified":1579249395766},{"_id":"public/2020/01/17/hello-world copy 12/index.html","hash":"9deaeccd72a681d5a77f16e8018e86accd2b91bc","modified":1579249395766},{"_id":"public/2020/01/17/hello-world copy 11/index.html","hash":"9deaeccd72a681d5a77f16e8018e86accd2b91bc","modified":1579249395766},{"_id":"public/2020/01/17/hello-world copy 10/index.html","hash":"9deaeccd72a681d5a77f16e8018e86accd2b91bc","modified":1579249395766},{"_id":"public/2020/01/17/hello-world copy 9/index.html","hash":"9deaeccd72a681d5a77f16e8018e86accd2b91bc","modified":1579249395766},{"_id":"public/2020/01/17/hello-world copy 8/index.html","hash":"9deaeccd72a681d5a77f16e8018e86accd2b91bc","modified":1579249395766},{"_id":"public/2020/01/17/hello-world copy 7/index.html","hash":"9deaeccd72a681d5a77f16e8018e86accd2b91bc","modified":1579249395766},{"_id":"public/2020/01/17/hello-world copy 6/index.html","hash":"9deaeccd72a681d5a77f16e8018e86accd2b91bc","modified":1579249395766},{"_id":"public/2020/01/17/hello-world copy 5/index.html","hash":"9deaeccd72a681d5a77f16e8018e86accd2b91bc","modified":1579249395766},{"_id":"public/2020/01/17/hello-world copy 4/index.html","hash":"9deaeccd72a681d5a77f16e8018e86accd2b91bc","modified":1579249395766},{"_id":"public/2020/01/17/hello-world copy 3/index.html","hash":"9deaeccd72a681d5a77f16e8018e86accd2b91bc","modified":1579249395766},{"_id":"public/2020/01/17/hello-world copy 2/index.html","hash":"9deaeccd72a681d5a77f16e8018e86accd2b91bc","modified":1579249395766},{"_id":"public/2020/01/17/hello-world copy/index.html","hash":"9deaeccd72a681d5a77f16e8018e86accd2b91bc","modified":1579249395766},{"_id":"public/archives/page/2/index.html","hash":"6d3af260886a2b24808de5af8bc0317f52ad479d","modified":1579249395766},{"_id":"public/archives/2020/page/2/index.html","hash":"6febe3a239b0cf8e554cdf82a150cf0c367da904","modified":1579249395766},{"_id":"public/archives/2020/01/page/2/index.html","hash":"65827b51a1b48356dc7fedc612e767f0ca29894b","modified":1579249395766},{"_id":"public/page/2/index.html","hash":"dd769555a08a996aaff64f19c143d24c12a3af62","modified":1579249395766},{"_id":"themes/drops/source/css/_partial/index.styl","hash":"f54c9ad968289c93629ac3b184ea9d512078af6c","modified":1579250416934}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2020-01-17T05:34:36.675Z","updated":"2020-01-17T05:34:36.675Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck5hqgxwh0000tkw236wpgksn","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"_content":"### 1.前言\n\n> 在 web 页面开发中，常常会有这样的需求：<br>\n>\n> &emsp;&emsp;**在当前页面内打开一个外部页面。**<br>\n>\n> &emsp;&emsp;如果仅仅是跳转到外部页面，对于有经验的开发者来说，应该没有什么难度。但常常，需要打开的页面仅仅是当前已有页面的一部分，即需要嵌套到当前页面内，往往就不太好实现了。\n\n### 2.解决方案\n\n使用 **iframe** 加载外部页面。\n\nhtml 页面内嵌套 iframe，并将 iframe 的 src 属性绑定为目标外部页面链接。\n\n```\n <div id=\"iframe-container\">\n      <iframe :src=\"iframeSrc\" scrolling=\"auto\" frameborder=\"0\" id=\"iframe\"></iframe>\n  </div>\n```\n\n### 3.示例\n\n**需求：** 点击电商导航内菜单，打开相应页面，在新开页面中，显示页面加载状态，可以回退和直接关闭新开页面。\n\n![iframe-example.png](../images/iframe-example.png)\n\n**分析：**\n\n- 图一和图二顶部样式不一致，因此，是两个独立的组件。\n- 点击图一页面中的菜单，跳转到图二页面，需要配置路由。\n- 如何传递外部页面的地址？路由传参？vuex?\n\n**实现：**\n&emsp;&emsp;Tips： 本例基于 vue + vue-router + vuex + vant 实现\n\n图一页面布局：\n\n```\n <div class=\"module-box\">\n      <div class=\"module-title\">电商导航</div>\n      <van-grid :column-num=\"3\">\n          <van-grid-item v-for=\"(item,index) in eShopNavItems\"\n                         :key=\"index\"\n                         :icon=\"item.iconPath\"\n                         :text=\"item.name\"\n                         @click=\"gotoPage(item.path)\" />\n      </van-grid>\n </div>\n```\n\njs 部分：\n\n```\n<script>\nexport default {\n  components: {},\n  props: {},\n  data() {\n    return {\n      eShopNavItems: [\n        {\n          name: '京东',\n          iconPath: require('../../../assets/images/lifeServices/index/jd.png'),\n          path: '/home/lifeServices/jd',\n        },\n        <!-- 其他菜单配置 -->\n      ]\n    }\n  },\n  methods: {\n    onClickLeft() {\n      this.$router.go(-1)\n    },\n\n    gotoPage(path) {\n      this.$router.push(path)\n\n      <!-- 存储目标外链的url及要显示的标题 -->\n      <!-- 这部分写在路由配置里的meta参数下 -->\n\n      this.$store.state.iframeSrc = this.$route.meta.link\n      this.$store.state.iframeTitle = this.$route.meta.title\n    }\n  }\n}\n</script>\n\n```\n\n路由配置：\n\n```\nconst routes = [{\n  path: '/home/lifeServices/externalLink',\n  name: 'externalLink',\n  component: LinkHome,\n  children: [\n    {\n      path: '/home/lifeServices/jd',\n      meta: {\n        link: 'https://m.jd.com/',\n        title: '京东(jd.com)'\n      }\n    },\n];\n```\n\n接下来关键的实现，也是最核心的点在于“LinkHome”组件的实现。\n\nLinkHome.vue\n\n```\n<template>\n  <div class=\"link-home\">\n    <div class=\"header\">\n      <van-nav-bar\n        :title=\"$store.state.iframeTitle\"\n        left-arrow\n        @click-left=\"onClickLeft\"\n      ></van-nav-bar>\n      <van-icon name=\"cross\" class=\"close\" @click=\"closeTab\" />\n    </div>\n\n    <div id=\"iframe-container\">\n      <iframe :src=\"$store.state.iframeSrc\" scrolling=\"auto\" frameborder=\"0\" id=\"iframe\"></iframe>\n    </div>\n  </div>\n</template>\n\n<script>\nimport NProgress from 'nprogress'\n\nexport default {\n  mounted() {\n    let iframe = document.getElementById('iframe')\n    NProgress.start()\n\n    iframe.onload = function() {\n      NProgress.done()\n    }\n  },\n  methods: {\n    onClickLeft() {\n      this.$router.go(-1)\n      NProgress.done()\n    },\n\n    closeTab() {\n      this.$router.replace('/home/lifeServices/index')\n      NProgress.done()\n    }\n  }\n}\n</script>\n\n<!-- css样式省略 -->\n\n```\n\n给 iframe 的 src 属性绑定值，且为目标外部页面地址。即可嵌套加载外部页面。\n\n页面加载状态使用[NProgress](https://github.com/rstacruz/nprogress)。\n\n在 vue.js 的 mounted 生命周期内，开始加载进度条。\n\n```\nNProgress.start()\n```\n\n获取 iframe 元素，当 iframe 页面加载完成后，关闭进度条。\n\n```\niframe.onload = function() {\n  NProgress.done()\n}\n```\n\n当后退或者关闭当前页面时，也应该一并关闭进度条提示。因为当页面还没有加载完时，后退或者关闭页面，将会导致进度条一致存在。\n\n**特别提示:** 关闭页面，即回到主页时，应使用 **`this.$router.replace`** 而不是 `this.$router.push`，这两个同样是跳转到指定的 url，但是 `this.$router.replace` 不会向 history 里面添加新的记录。回到主页，再后退，应该是回到进入主页的上一个页面，而不是刚才打开的外部页面。\n","source":"_posts/vue 组件内嵌套外部页面的实现与案例分享.md","raw":"### 1.前言\n\n> 在 web 页面开发中，常常会有这样的需求：<br>\n>\n> &emsp;&emsp;**在当前页面内打开一个外部页面。**<br>\n>\n> &emsp;&emsp;如果仅仅是跳转到外部页面，对于有经验的开发者来说，应该没有什么难度。但常常，需要打开的页面仅仅是当前已有页面的一部分，即需要嵌套到当前页面内，往往就不太好实现了。\n\n### 2.解决方案\n\n使用 **iframe** 加载外部页面。\n\nhtml 页面内嵌套 iframe，并将 iframe 的 src 属性绑定为目标外部页面链接。\n\n```\n <div id=\"iframe-container\">\n      <iframe :src=\"iframeSrc\" scrolling=\"auto\" frameborder=\"0\" id=\"iframe\"></iframe>\n  </div>\n```\n\n### 3.示例\n\n**需求：** 点击电商导航内菜单，打开相应页面，在新开页面中，显示页面加载状态，可以回退和直接关闭新开页面。\n\n![iframe-example.png](../images/iframe-example.png)\n\n**分析：**\n\n- 图一和图二顶部样式不一致，因此，是两个独立的组件。\n- 点击图一页面中的菜单，跳转到图二页面，需要配置路由。\n- 如何传递外部页面的地址？路由传参？vuex?\n\n**实现：**\n&emsp;&emsp;Tips： 本例基于 vue + vue-router + vuex + vant 实现\n\n图一页面布局：\n\n```\n <div class=\"module-box\">\n      <div class=\"module-title\">电商导航</div>\n      <van-grid :column-num=\"3\">\n          <van-grid-item v-for=\"(item,index) in eShopNavItems\"\n                         :key=\"index\"\n                         :icon=\"item.iconPath\"\n                         :text=\"item.name\"\n                         @click=\"gotoPage(item.path)\" />\n      </van-grid>\n </div>\n```\n\njs 部分：\n\n```\n<script>\nexport default {\n  components: {},\n  props: {},\n  data() {\n    return {\n      eShopNavItems: [\n        {\n          name: '京东',\n          iconPath: require('../../../assets/images/lifeServices/index/jd.png'),\n          path: '/home/lifeServices/jd',\n        },\n        <!-- 其他菜单配置 -->\n      ]\n    }\n  },\n  methods: {\n    onClickLeft() {\n      this.$router.go(-1)\n    },\n\n    gotoPage(path) {\n      this.$router.push(path)\n\n      <!-- 存储目标外链的url及要显示的标题 -->\n      <!-- 这部分写在路由配置里的meta参数下 -->\n\n      this.$store.state.iframeSrc = this.$route.meta.link\n      this.$store.state.iframeTitle = this.$route.meta.title\n    }\n  }\n}\n</script>\n\n```\n\n路由配置：\n\n```\nconst routes = [{\n  path: '/home/lifeServices/externalLink',\n  name: 'externalLink',\n  component: LinkHome,\n  children: [\n    {\n      path: '/home/lifeServices/jd',\n      meta: {\n        link: 'https://m.jd.com/',\n        title: '京东(jd.com)'\n      }\n    },\n];\n```\n\n接下来关键的实现，也是最核心的点在于“LinkHome”组件的实现。\n\nLinkHome.vue\n\n```\n<template>\n  <div class=\"link-home\">\n    <div class=\"header\">\n      <van-nav-bar\n        :title=\"$store.state.iframeTitle\"\n        left-arrow\n        @click-left=\"onClickLeft\"\n      ></van-nav-bar>\n      <van-icon name=\"cross\" class=\"close\" @click=\"closeTab\" />\n    </div>\n\n    <div id=\"iframe-container\">\n      <iframe :src=\"$store.state.iframeSrc\" scrolling=\"auto\" frameborder=\"0\" id=\"iframe\"></iframe>\n    </div>\n  </div>\n</template>\n\n<script>\nimport NProgress from 'nprogress'\n\nexport default {\n  mounted() {\n    let iframe = document.getElementById('iframe')\n    NProgress.start()\n\n    iframe.onload = function() {\n      NProgress.done()\n    }\n  },\n  methods: {\n    onClickLeft() {\n      this.$router.go(-1)\n      NProgress.done()\n    },\n\n    closeTab() {\n      this.$router.replace('/home/lifeServices/index')\n      NProgress.done()\n    }\n  }\n}\n</script>\n\n<!-- css样式省略 -->\n\n```\n\n给 iframe 的 src 属性绑定值，且为目标外部页面地址。即可嵌套加载外部页面。\n\n页面加载状态使用[NProgress](https://github.com/rstacruz/nprogress)。\n\n在 vue.js 的 mounted 生命周期内，开始加载进度条。\n\n```\nNProgress.start()\n```\n\n获取 iframe 元素，当 iframe 页面加载完成后，关闭进度条。\n\n```\niframe.onload = function() {\n  NProgress.done()\n}\n```\n\n当后退或者关闭当前页面时，也应该一并关闭进度条提示。因为当页面还没有加载完时，后退或者关闭页面，将会导致进度条一致存在。\n\n**特别提示:** 关闭页面，即回到主页时，应使用 **`this.$router.replace`** 而不是 `this.$router.push`，这两个同样是跳转到指定的 url，但是 `this.$router.replace` 不会向 history 里面添加新的记录。回到主页，再后退，应该是回到进入主页的上一个页面，而不是刚才打开的外部页面。\n","slug":"vue 组件内嵌套外部页面的实现与案例分享","published":1,"date":"2020-01-17T05:40:34.279Z","updated":"2020-01-17T05:41:33.591Z","title":"vue 组件内嵌套外部页面的实现与案例分享","_id":"ck5hqi4jh0000egw231r0go3u","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1.前言\"></a>1.前言</h3><blockquote>\n<p>在 web 页面开发中，常常会有这样的需求：<br></p>\n<p>&emsp;&emsp;<strong>在当前页面内打开一个外部页面。</strong><br></p>\n<p>&emsp;&emsp;如果仅仅是跳转到外部页面，对于有经验的开发者来说，应该没有什么难度。但常常，需要打开的页面仅仅是当前已有页面的一部分，即需要嵌套到当前页面内，往往就不太好实现了。</p>\n</blockquote>\n<h3 id=\"2-解决方案\"><a href=\"#2-解决方案\" class=\"headerlink\" title=\"2.解决方案\"></a>2.解决方案</h3><p>使用 <strong>iframe</strong> 加载外部页面。</p>\n<p>html 页面内嵌套 iframe，并将 iframe 的 src 属性绑定为目标外部页面链接。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;iframe-container&quot;&gt;</span><br><span class=\"line\">     &lt;iframe :src&#x3D;&quot;iframeSrc&quot; scrolling&#x3D;&quot;auto&quot; frameborder&#x3D;&quot;0&quot; id&#x3D;&quot;iframe&quot;&gt;&lt;&#x2F;iframe&gt;</span><br><span class=\"line\"> &lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-示例\"><a href=\"#3-示例\" class=\"headerlink\" title=\"3.示例\"></a>3.示例</h3><p><strong>需求：</strong> 点击电商导航内菜单，打开相应页面，在新开页面中，显示页面加载状态，可以回退和直接关闭新开页面。</p>\n<p><img src=\"../images/iframe-example.png\" alt=\"iframe-example.png\"></p>\n<p><strong>分析：</strong></p>\n<ul>\n<li>图一和图二顶部样式不一致，因此，是两个独立的组件。</li>\n<li>点击图一页面中的菜单，跳转到图二页面，需要配置路由。</li>\n<li>如何传递外部页面的地址？路由传参？vuex?</li>\n</ul>\n<p><strong>实现：</strong><br>&emsp;&emsp;Tips： 本例基于 vue + vue-router + vuex + vant 实现</p>\n<p>图一页面布局：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class&#x3D;&quot;module-box&quot;&gt;</span><br><span class=\"line\">     &lt;div class&#x3D;&quot;module-title&quot;&gt;电商导航&lt;&#x2F;div&gt;</span><br><span class=\"line\">     &lt;van-grid :column-num&#x3D;&quot;3&quot;&gt;</span><br><span class=\"line\">         &lt;van-grid-item v-for&#x3D;&quot;(item,index) in eShopNavItems&quot;</span><br><span class=\"line\">                        :key&#x3D;&quot;index&quot;</span><br><span class=\"line\">                        :icon&#x3D;&quot;item.iconPath&quot;</span><br><span class=\"line\">                        :text&#x3D;&quot;item.name&quot;</span><br><span class=\"line\">                        @click&#x3D;&quot;gotoPage(item.path)&quot; &#x2F;&gt;</span><br><span class=\"line\">     &lt;&#x2F;van-grid&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>js 部分：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  components: &#123;&#125;,</span><br><span class=\"line\">  props: &#123;&#125;,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      eShopNavItems: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          name: &#39;京东&#39;,</span><br><span class=\"line\">          iconPath: require(&#39;..&#x2F;..&#x2F;..&#x2F;assets&#x2F;images&#x2F;lifeServices&#x2F;index&#x2F;jd.png&#39;),</span><br><span class=\"line\">          path: &#39;&#x2F;home&#x2F;lifeServices&#x2F;jd&#39;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &lt;!-- 其他菜单配置 --&gt;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    onClickLeft() &#123;</span><br><span class=\"line\">      this.$router.go(-1)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    gotoPage(path) &#123;</span><br><span class=\"line\">      this.$router.push(path)</span><br><span class=\"line\"></span><br><span class=\"line\">      &lt;!-- 存储目标外链的url及要显示的标题 --&gt;</span><br><span class=\"line\">      &lt;!-- 这部分写在路由配置里的meta参数下 --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">      this.$store.state.iframeSrc &#x3D; this.$route.meta.link</span><br><span class=\"line\">      this.$store.state.iframeTitle &#x3D; this.$route.meta.title</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>路由配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const routes &#x3D; [&#123;</span><br><span class=\"line\">  path: &#39;&#x2F;home&#x2F;lifeServices&#x2F;externalLink&#39;,</span><br><span class=\"line\">  name: &#39;externalLink&#39;,</span><br><span class=\"line\">  component: LinkHome,</span><br><span class=\"line\">  children: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: &#39;&#x2F;home&#x2F;lifeServices&#x2F;jd&#39;,</span><br><span class=\"line\">      meta: &#123;</span><br><span class=\"line\">        link: &#39;https:&#x2F;&#x2F;m.jd.com&#x2F;&#39;,</span><br><span class=\"line\">        title: &#39;京东(jd.com)&#39;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<p>接下来关键的实现，也是最核心的点在于“LinkHome”组件的实现。</p>\n<p>LinkHome.vue</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;link-home&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;header&quot;&gt;</span><br><span class=\"line\">      &lt;van-nav-bar</span><br><span class=\"line\">        :title&#x3D;&quot;$store.state.iframeTitle&quot;</span><br><span class=\"line\">        left-arrow</span><br><span class=\"line\">        @click-left&#x3D;&quot;onClickLeft&quot;</span><br><span class=\"line\">      &gt;&lt;&#x2F;van-nav-bar&gt;</span><br><span class=\"line\">      &lt;van-icon name&#x3D;&quot;cross&quot; class&#x3D;&quot;close&quot; @click&#x3D;&quot;closeTab&quot; &#x2F;&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div id&#x3D;&quot;iframe-container&quot;&gt;</span><br><span class=\"line\">      &lt;iframe :src&#x3D;&quot;$store.state.iframeSrc&quot; scrolling&#x3D;&quot;auto&quot; frameborder&#x3D;&quot;0&quot; id&#x3D;&quot;iframe&quot;&gt;&lt;&#x2F;iframe&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import NProgress from &#39;nprogress&#39;</span><br><span class=\"line\"></span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  mounted() &#123;</span><br><span class=\"line\">    let iframe &#x3D; document.getElementById(&#39;iframe&#39;)</span><br><span class=\"line\">    NProgress.start()</span><br><span class=\"line\"></span><br><span class=\"line\">    iframe.onload &#x3D; function() &#123;</span><br><span class=\"line\">      NProgress.done()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    onClickLeft() &#123;</span><br><span class=\"line\">      this.$router.go(-1)</span><br><span class=\"line\">      NProgress.done()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    closeTab() &#123;</span><br><span class=\"line\">      this.$router.replace(&#39;&#x2F;home&#x2F;lifeServices&#x2F;index&#39;)</span><br><span class=\"line\">      NProgress.done()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- css样式省略 --&gt;</span><br></pre></td></tr></table></figure>\n\n<p>给 iframe 的 src 属性绑定值，且为目标外部页面地址。即可嵌套加载外部页面。</p>\n<p>页面加载状态使用<a href=\"https://github.com/rstacruz/nprogress\" target=\"_blank\" rel=\"noopener\">NProgress</a>。</p>\n<p>在 vue.js 的 mounted 生命周期内，开始加载进度条。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NProgress.start()</span><br></pre></td></tr></table></figure>\n\n<p>获取 iframe 元素，当 iframe 页面加载完成后，关闭进度条。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iframe.onload &#x3D; function() &#123;</span><br><span class=\"line\">  NProgress.done()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当后退或者关闭当前页面时，也应该一并关闭进度条提示。因为当页面还没有加载完时，后退或者关闭页面，将会导致进度条一致存在。</p>\n<p><strong>特别提示:</strong> 关闭页面，即回到主页时，应使用 <strong><code>this.$router.replace</code></strong> 而不是 <code>this.$router.push</code>，这两个同样是跳转到指定的 url，但是 <code>this.$router.replace</code> 不会向 history 里面添加新的记录。回到主页，再后退，应该是回到进入主页的上一个页面，而不是刚才打开的外部页面。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1.前言\"></a>1.前言</h3><blockquote>\n<p>在 web 页面开发中，常常会有这样的需求：<br></p>\n<p>&emsp;&emsp;<strong>在当前页面内打开一个外部页面。</strong><br></p>\n<p>&emsp;&emsp;如果仅仅是跳转到外部页面，对于有经验的开发者来说，应该没有什么难度。但常常，需要打开的页面仅仅是当前已有页面的一部分，即需要嵌套到当前页面内，往往就不太好实现了。</p>\n</blockquote>\n<h3 id=\"2-解决方案\"><a href=\"#2-解决方案\" class=\"headerlink\" title=\"2.解决方案\"></a>2.解决方案</h3><p>使用 <strong>iframe</strong> 加载外部页面。</p>\n<p>html 页面内嵌套 iframe，并将 iframe 的 src 属性绑定为目标外部页面链接。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id&#x3D;&quot;iframe-container&quot;&gt;</span><br><span class=\"line\">     &lt;iframe :src&#x3D;&quot;iframeSrc&quot; scrolling&#x3D;&quot;auto&quot; frameborder&#x3D;&quot;0&quot; id&#x3D;&quot;iframe&quot;&gt;&lt;&#x2F;iframe&gt;</span><br><span class=\"line\"> &lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-示例\"><a href=\"#3-示例\" class=\"headerlink\" title=\"3.示例\"></a>3.示例</h3><p><strong>需求：</strong> 点击电商导航内菜单，打开相应页面，在新开页面中，显示页面加载状态，可以回退和直接关闭新开页面。</p>\n<p><img src=\"../images/iframe-example.png\" alt=\"iframe-example.png\"></p>\n<p><strong>分析：</strong></p>\n<ul>\n<li>图一和图二顶部样式不一致，因此，是两个独立的组件。</li>\n<li>点击图一页面中的菜单，跳转到图二页面，需要配置路由。</li>\n<li>如何传递外部页面的地址？路由传参？vuex?</li>\n</ul>\n<p><strong>实现：</strong><br>&emsp;&emsp;Tips： 本例基于 vue + vue-router + vuex + vant 实现</p>\n<p>图一页面布局：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class&#x3D;&quot;module-box&quot;&gt;</span><br><span class=\"line\">     &lt;div class&#x3D;&quot;module-title&quot;&gt;电商导航&lt;&#x2F;div&gt;</span><br><span class=\"line\">     &lt;van-grid :column-num&#x3D;&quot;3&quot;&gt;</span><br><span class=\"line\">         &lt;van-grid-item v-for&#x3D;&quot;(item,index) in eShopNavItems&quot;</span><br><span class=\"line\">                        :key&#x3D;&quot;index&quot;</span><br><span class=\"line\">                        :icon&#x3D;&quot;item.iconPath&quot;</span><br><span class=\"line\">                        :text&#x3D;&quot;item.name&quot;</span><br><span class=\"line\">                        @click&#x3D;&quot;gotoPage(item.path)&quot; &#x2F;&gt;</span><br><span class=\"line\">     &lt;&#x2F;van-grid&gt;</span><br><span class=\"line\">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>\n\n<p>js 部分：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  components: &#123;&#125;,</span><br><span class=\"line\">  props: &#123;&#125;,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      eShopNavItems: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          name: &#39;京东&#39;,</span><br><span class=\"line\">          iconPath: require(&#39;..&#x2F;..&#x2F;..&#x2F;assets&#x2F;images&#x2F;lifeServices&#x2F;index&#x2F;jd.png&#39;),</span><br><span class=\"line\">          path: &#39;&#x2F;home&#x2F;lifeServices&#x2F;jd&#39;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &lt;!-- 其他菜单配置 --&gt;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    onClickLeft() &#123;</span><br><span class=\"line\">      this.$router.go(-1)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    gotoPage(path) &#123;</span><br><span class=\"line\">      this.$router.push(path)</span><br><span class=\"line\"></span><br><span class=\"line\">      &lt;!-- 存储目标外链的url及要显示的标题 --&gt;</span><br><span class=\"line\">      &lt;!-- 这部分写在路由配置里的meta参数下 --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">      this.$store.state.iframeSrc &#x3D; this.$route.meta.link</span><br><span class=\"line\">      this.$store.state.iframeTitle &#x3D; this.$route.meta.title</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>路由配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const routes &#x3D; [&#123;</span><br><span class=\"line\">  path: &#39;&#x2F;home&#x2F;lifeServices&#x2F;externalLink&#39;,</span><br><span class=\"line\">  name: &#39;externalLink&#39;,</span><br><span class=\"line\">  component: LinkHome,</span><br><span class=\"line\">  children: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: &#39;&#x2F;home&#x2F;lifeServices&#x2F;jd&#39;,</span><br><span class=\"line\">      meta: &#123;</span><br><span class=\"line\">        link: &#39;https:&#x2F;&#x2F;m.jd.com&#x2F;&#39;,</span><br><span class=\"line\">        title: &#39;京东(jd.com)&#39;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n\n<p>接下来关键的实现，也是最核心的点在于“LinkHome”组件的实现。</p>\n<p>LinkHome.vue</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;link-home&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;header&quot;&gt;</span><br><span class=\"line\">      &lt;van-nav-bar</span><br><span class=\"line\">        :title&#x3D;&quot;$store.state.iframeTitle&quot;</span><br><span class=\"line\">        left-arrow</span><br><span class=\"line\">        @click-left&#x3D;&quot;onClickLeft&quot;</span><br><span class=\"line\">      &gt;&lt;&#x2F;van-nav-bar&gt;</span><br><span class=\"line\">      &lt;van-icon name&#x3D;&quot;cross&quot; class&#x3D;&quot;close&quot; @click&#x3D;&quot;closeTab&quot; &#x2F;&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div id&#x3D;&quot;iframe-container&quot;&gt;</span><br><span class=\"line\">      &lt;iframe :src&#x3D;&quot;$store.state.iframeSrc&quot; scrolling&#x3D;&quot;auto&quot; frameborder&#x3D;&quot;0&quot; id&#x3D;&quot;iframe&quot;&gt;&lt;&#x2F;iframe&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import NProgress from &#39;nprogress&#39;</span><br><span class=\"line\"></span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  mounted() &#123;</span><br><span class=\"line\">    let iframe &#x3D; document.getElementById(&#39;iframe&#39;)</span><br><span class=\"line\">    NProgress.start()</span><br><span class=\"line\"></span><br><span class=\"line\">    iframe.onload &#x3D; function() &#123;</span><br><span class=\"line\">      NProgress.done()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    onClickLeft() &#123;</span><br><span class=\"line\">      this.$router.go(-1)</span><br><span class=\"line\">      NProgress.done()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">    closeTab() &#123;</span><br><span class=\"line\">      this.$router.replace(&#39;&#x2F;home&#x2F;lifeServices&#x2F;index&#39;)</span><br><span class=\"line\">      NProgress.done()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- css样式省略 --&gt;</span><br></pre></td></tr></table></figure>\n\n<p>给 iframe 的 src 属性绑定值，且为目标外部页面地址。即可嵌套加载外部页面。</p>\n<p>页面加载状态使用<a href=\"https://github.com/rstacruz/nprogress\" target=\"_blank\" rel=\"noopener\">NProgress</a>。</p>\n<p>在 vue.js 的 mounted 生命周期内，开始加载进度条。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NProgress.start()</span><br></pre></td></tr></table></figure>\n\n<p>获取 iframe 元素，当 iframe 页面加载完成后，关闭进度条。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iframe.onload &#x3D; function() &#123;</span><br><span class=\"line\">  NProgress.done()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当后退或者关闭当前页面时，也应该一并关闭进度条提示。因为当页面还没有加载完时，后退或者关闭页面，将会导致进度条一致存在。</p>\n<p><strong>特别提示:</strong> 关闭页面，即回到主页时，应使用 <strong><code>this.$router.replace</code></strong> 而不是 <code>this.$router.push</code>，这两个同样是跳转到指定的 url，但是 <code>this.$router.replace</code> 不会向 history 里面添加新的记录。回到主页，再后退，应该是回到进入主页的上一个页面，而不是刚才打开的外部页面。</p>\n"},{"title":"vue项目中使用eslint+prettier规范与检查代码","date":"2020-01-16T09:54:10.000Z","_content":"\n### 1.前言\n\n> &emsp;&emsp;在团队协作中，为避免低级 Bug、以及团队协作时不同代码风格对彼此造成的困扰与影响，会预先制定编码规范。使用 Lint 工具和代码风格检测工具，则可以辅助编码规范执行，有效控制代码质量。EsLint 则是其中一个很好的工具。\n>\n> EsLint 提供以下支持：\n>\n> - ES6\n> - AngularJS\n> - JSX\n> - Style 检查\n> - 自定义错误和提示\n>\n> EsLint 提供以下几种校验：\n>\n> - 语法错误校验\n> - 不重要或丢失的标点符号，如分号\n> - 未被使用的参数提醒\n> - 漏掉的结束符，如}\n> - 确保样式的统一规则，如 sass 或者 less\n> - 检查变量的命名\n> - 影响性能的代码提醒，如 v-if 和 v-for 同时使用\n\n### 2.eslint 配置\n\n#### 2.1 代码规范\n\n> &emsp;&emsp;本项目基本规范是依托于 vue 官方的 [eslint-plugin-vue](https://github.com/vuejs/eslint-plugin-vue)。并使用 Prettier 格式化代码，使样式与规则保持一致。\n>\n> .eslintrc.js 配置如下：\n\n```\n{\nroot: true, // 当前配置为根配置，将不再从上级文件夹查找配置\nparserOptions: {\n  parser: 'babel-eslint',  // 采用 babel-eslint 作为语法解析器\n  sourceType: 'module',   // 指定来源的类型，有两种script或module\n  ecmaVersion: 6, //指定ECMAScript支持的版本，6为ES6\n},\nenv: {\n  browser: true,  // 设置为所需检查的代码是在浏览器环境运行的\n  es6: true  // 设置所需检查代码为 es6 语法书写\n},\nextends: ['plugin:vue/recommended', 'eslint:recommended'],// 扩展使用 vue 检查规则和eslint推荐规则\n  rules: {\n    'vue/attribute-hyphenation': 0, // 忽略属性连字\n    'vue/max-attributes-per-line':[2, { singleline: 10, multiline: { max: 1, allowFirstLine: false } }], // 每行最大属性\n    'vue/singleline-html-element-content-newline': 'off', // 单行html元素内容在新的一行\n    'vue/multiline-html-element-content-newline': 'off', // 多行html元素内容在新的一行\n    'vue/html-closing-bracket-newline': 'off', // html右括号在新的一行\n    'vue/no-v-html': 'off', // 不使用v-html\n    'vue/html-self-closing': 0, // 忽略html标签自闭合\n    'accessor-pairs': 2, // 应同时设置setter和getter\n    'arrow-spacing': [2, { before: true, after: true }], // 箭头间距\n    'vue/require-default-prop': 0, // 不检查默认属性\n    'vue/require-prop-types': 0, // 不检查默认类型\n    'block-spacing': [2, 'always'], // 块间距\n    'brace-style': [2, '1tbs', { allowSingleLine: true }], // 大括号样式允许单行\n    'camelcase': [2, { properties: 'always' }], //为属性强制执行驼峰命名\n    'comma-dangle': [2, 'never'], // 逗号不使用悬挂\n    'comma-spacing': [2, { before: false, after: true }], // 逗号间距\n    'comma-style': [2, 'last'], //（默认）与数组元素，对象属性或变量声明在同一行之后和同一行需要逗号\n    'constructor-super': 2,\n    'consistent-this': [2, 'that'], //强制this别名为that\n    'curly': [2, 'multi-line'], // 当一个块只包含一条语句时，不允许省略花括号。\n    'dot-location': [2, 'property'], //成员表达式中的点应与属性部分位于同一行\n    'eol-last': 2, // 强制文件以换行符结束（LF）\n    'eqeqeq': ['error', 'always', { null: 'ignore' }], // 强制使用全等\n    'generator-star-spacing': [2, { before: true, after: true }], // 生成器中'*'两侧都要有间距\n    'global-require': 1, // 所有调用require()都位于模块的顶层\n    'indent': [2, 2, { SwitchCase: 2 }], //缩进风格\n    'key-spacing': [2, { beforeColon: false, afterColon: true }], // 强制在对象字面量属性中的键和值之间保持一致的间距\n    'keyword-spacing': [2, { before: true, after: true }], // 关键字如if/function等的间距\n    'new-cap': [2, { newIsCap: true, capIsNew: false }],// 允许在没有new操作符的情况下调用大写启动的函数;（默认）要求new使用大写启动函数调用所有操作符\n    'new-parens': 2, // JavaScript通过new关键字调用函数时允许省略括号\n    'no-array-constructor': 1, // 不允许使用Array构造函数。除非要指定生成数组的长度\n    'no-console': process.env.NODE_ENV === 'production' ? 'error' : 'off', // 只有开发环境可以使用console\n    'no-class-assign': 2, // 不允许修改类声明的变量\n    'no-const-assign': 2, // 不能修改使用const关键字声明的变量\n    'no-control-regex': 0, // 不允许正则表达式中的控制字符\n    'no-debugger': process.env.NODE_ENV === 'production' ? 'error' : 'off', // 只有开发环境可以使用debugger\n    'no-delete-var': 2, // 不允许在变量上使用delete操作符\n    'no-dupe-args': 2, // 不允许在函数声明或表达式中使用重复的参数名称\n    'no-dupe-class-members': 2, // 不允许在类成员中使用重复的参数名称\n    'no-dupe-keys': 2, // 不允许在对象文字中使用重复键\n    'no-duplicate-case': 2, // 不允许在switch语句的case子句中使用重复的测试表达式\n    'no-empty-character-class': 2, // 不允许在正则表达式中使用空字符类\n    'no-empty-pattern': 2, // 不允许空块语句\n    'no-eval': 2, // 不允许使用eval\n    'no-ex-assign': 2, // 不允许在catch子句中重新分配例外\n    'no-extend-native': 2, // 不允许直接修改内建对象的原型\n    'no-extra-boolean-cast': 2, // 禁止不必要的布尔转换\n    'no-extra-parens': [2, 'functions'], // 仅在函数表达式附近禁止不必要的括号\n    'no-fallthrough': 2, //消除一个案件无意中掉到另一个案件\n    'no-floating-decimal': 2, //消除浮点小数点，并在数值有小数点但在其之前或之后缺少数字时发出警告\n    'no-func-assign': 2, // 允许重新分配function声明\n    'no-implied-eval': 2, // 消除隐含eval()\n    'no-inner-declarations': [2, 'functions'], // 不允许function嵌套块中的声明\n    'no-invalid-regexp': 2, //不允许RegExp构造函数中的无效正则表达式字符串\n    'no-irregular-whitespace': 2, //捕获无效的空格\n    'no-iterator': 2, //消除阴影变量声明\n    'no-label-var': 2, //禁止创建与范围内的变量共享名称的标签\n    'no-labels': [2, { allowLoop: false, allowSwitch: false }], // 消除 JavaScript 中使用带标签的语句\n    'no-lone-blocks': 2, //消除脚本顶层或其他块中不必要的和可能混淆的块\n    'no-mixed-spaces-and-tabs': 2, // 不允许使用混合空格和制表符进行缩进\n    'no-multi-spaces': 2, // 禁止在逻辑表达式，条件表达式，声明，数组元素，对象属性，序列和函数参数周围使用多个空格\n    'no-multi-str': 2, // 防止使用多行字符串\n    'no-multiple-empty-lines': [2, { max: 1 }], // 最多一个空行\n    'no-native-reassign': 2, // 不允许修改只读全局变量\n    'no-new-object': 2, // 不允许使用Object构造函数\n    'no-new-require': 2, // 消除new require表达的使用\n    'no-new-symbol': 2, // 防止Symbol与new 同时使用的意外错误\n    'no-new-wrappers': 2, // 杜绝使用String，Number以及Boolean与new操作\n    'no-obj-calls': 2, // 不允许调用Math，JSON和Reflect对象作为功能\n    'no-octal': 2, // 不允许使用八进制文字\n    'no-octal-escape': 2, // 不允许字符串文字中的八进制转义序列\n    'no-path-concat': 2, // 防止 Node.js 中的目录路径字符串连接无效\n    'no-redeclare': 2, // 消除在同一范围内具有多个声明的变量\n    'no-regex-spaces': 2, // 在正则表达式文字中不允许有多个空格\n    'no-return-assign': [2, 'except-parens'], // 消除return陈述中的任务，除非用括号括起来\n    'no-self-assign': 2, // 消除自我分配\n    'no-self-compare': 2, // 禁止比较变量与自身\n    'no-sequences': 2, // 禁止使用逗号运算符\n    'no-sparse-arrays': 2, // 不允许稀疏数组文字\n    'no-this-before-super': 2, // 在呼call前标记this/super关键字super()\n    'no-throw-literal': 2, // 不允许抛出不可能是Error对象的文字和其他表达式\n    'no-trailing-spaces': 2, // 不允许在行尾添加尾随空白\n    'no-undef': 2, // 任何对未声明的变量的引用都会导致错误\n    'no-undef-init': 2, // 消除初始化为undefined的变量声明\n    'no-underscore-dangle': 2, // 标识符不能以_开头或结尾\n    'no-unexpected-multiline': 2, // 不允许混淆多行表达式\n    'no-unmodified-loop-condition': 2, // 查找循环条件内的引用，然后检查这些引用的变量是否在循环中被修改\n    'no-unneeded-ternary': [2, { defaultAssignment: false }], // 不允许将条件表达式作为默认的分配模式\n    'no-unreachable': 2, // 不允许可达代码return，throw，continue，和break语句后面还有语句。\n    'no-unsafe-finally': 2, // 不允许return，throw，break，和continue里面的语句finally块\n    'no-unused-vars': [2, { vars: 'all', args: 'after-used' }],\n    // 消除未使用的变量，函数和函数的参数\n    // vars: 'all' 检查所有变量的使用情况，包括全局范围内的变量。这是默认设置。 args: 'after-used'  只有最后一个参数必须使用。例如，这允许您为函数使用两个命名参数，并且只要您使用第二个参数，ESLint 就不会警告您第一个参数。这是默认设置。\n    'no-useless-call': 2, // 标记使用情况，Function.prototype.call()并且Function.prototype.apply()可以用正常的函数调用来替代\n    'no-useless-computed-key': 2, // 禁止不必要地使用计算属性键\n    'no-useless-constructor': 2, // 在不改变类的工作方式的情况下安全地移除的类构造函数\n    'no-useless-escape': 0, // 禁用不必要的转义字符\n    'no-whitespace-before-property': 2, // 如果对象的属性位于同一行上，不允许围绕点或在开头括号之前留出空白\n    'no-with': 2, //禁用with\n    'no-var': 2, // 禁用var\n    'one-var': [2, { initialized: 'never' }], // 强制将变量声明为每个函数（对于var）或块（对于let和const）范围一起声明或单独声明。 initialized: 'never' 每个作用域要求多个变量声明用于初始化变量\n    'operator-linebreak': [2, 'after', { overrides: { '?': 'before', ':': 'before' } }], // 实施一致的换行\n    'padded-blocks': [2, 'never'], // 在块内强制执行一致的空行填充\n    'prefer-destructuring': ['error', { object: false, array: false }], // 此规则强制使用解构而不是通过成员表达式访问属性。\n    'quotes': [2, 'single', { avoidEscape: true, allowTemplateLiterals: true }],// avoidEscape: true 允许字符串使用单引号或双引号，只要字符串包含必须以其他方式转义的引号 ;allowTemplateLiterals: true 允许字符串使用反引号\n    'radix': 2, //parseInt必须指定第二个参数\n    'semi': [2, 'never'], // 不使用分号\n    'semi-spacing': [2, { before: false, after: true }], // 强制分号间隔\n    'space-before-blocks': [2, 'always'], // 块必须至少有一个先前的空间\n    'space-before-function-paren': [2, 'never'], // 在(参数后面不允许任何空格\n    'space-in-parens': [2, 'never'], // 禁止或要求（或）左边的一个或多个空格\n    'space-infix-ops': 2, // 强制二元运算符左右各有一个空格\n    'space-unary-ops': [2, { words: true, nonwords: false }],//  words: true  如：new，delete，typeof，void，yield 左右必须有空格 //  nonwords: false  一元运算符，如：-，+，--，++，!，!!左右不能有空格\n    'spaced-comment': [2, 'always', { markers: ['global', 'globals', 'eslint', 'eslint-disable', '*package', '!', ','] }], // 注释开始后，此规则将强制间距的一致性//或/*\n    'template-curly-spacing': [2, 'never'], // 不允许大括号内的空格\n    'use-isnan': 2, //禁止比较时使用NaN，只能用isNaN()\n    'valid-typeof': 2, //必须使用合法的typeof的值\n    'wrap-iife': [2, 'any'], //立即执行函数表达式的小括号风格\n    'yield-star-spacing': [2, 'both'], // 强制执行*周围 yield*表达式的间距，两侧都必须有空格\n    'yoda': [2, 'never'],\n    'prefer-const': 2, // 使用let关键字声明的变量，但在初始分配后从未重新分配变量，应改为const声明\n    'object-curly-spacing': [2, 'always', { objectsInObjects: false }],// 不允许以对象元素开始和/或以对象元素结尾的对象的大括号内的间距\n    'array-bracket-spacing': [2, 'never'] // 不允许数组括号内的空格\n  }\n}\n\n```\n\n#### 2.2 eslint 安装与配置\n\n- 全局安装 eslint\n  ```\n  npm install -g eslint\n  ```\n- 全局安装 Prettier\n  ```\n  npm install -g prettier\n  ```\n- vscode 插件市场搜索 eslint 和 prettier,下载并安装。\n  ![图片1.png](../images/eslint.png) <br>\n  ![图片2.png](../images/prettier.png)\n- vscode 编辑器 setting.json 中加如下配置：\n\n```\n/* 开启保存时自动格式化 */\n\"editor.formatOnSave\": true,\n\n/* eslint的配置 */\n\"eslint.enable\": true,\n\"eslint.run\": \"onSave\",\n\"eslint.options\": {\n   \"extensions\": [\n     \".js\",\n     \".vue\"\n   ]\n },\n \"editor.codeActionsOnSave\": {\n   \"source.fixAll.eslint\": true // 保存时自动修复\n },\n // 关闭 vscode 默认的检查工具\n \"html.validate.scripts\": false,\n \"javascript.validate.enable\": false,\n \"eslint.alwaysShowStatus\": true,\n \"eslint.format.enable\": true,\n \"scss.lint.duplicateProperties\": \"error\",\n \"css.lint.duplicateProperties\": \"error\",\n \"less.lint.zeroUnits\": \"error\",\n \"eslint.validate\": [\n   \"javascript\",\n   \"javascriptreact\",\n   \"vue-html\",\n   \"vue\",\n   \"html\"\n ],\n\n/*  prettier的配置 */\n \"prettier.printWidth\": 120, // 超过最大值换行\n \"prettier.tabWidth\": 2, // 缩进字节数\n \"prettier.useTabs\": true, // 缩进使用tab\n \"prettier.semi\": false, // 句尾添加分号\n \"prettier.singleQuote\": true, // 使用单引号代替双引号\n \"prettier.proseWrap\": \"preserve\", // 默认值。因为使用了一些折行敏感型的渲染器（如GitHub comment）而按照markdown文本样式进行折行\n \"prettier.arrowParens\": \"avoid\", //  (x) => {} 箭头函数参数只有一个时是否要有小括号。avoid：省略括号\n \"prettier.bracketSpacing\": true, // 在对象，数组括号与文字之间加空格 \"{ foo: bar }\"\n \"prettier.endOfLine\": \"auto\", // 结尾是 \\n \\r \\n\\r auto\n \"prettier.htmlWhitespaceSensitivity\": \"ignore\",\n \"prettier.ignorePath\": \".prettierignore\", // 不使用prettier格式化的文件填写在项目的.prettierignore文件中\n \"prettier.requireConfig\": false, // Require a \"prettierconfig\" to format prettier\n \"prettier.trailingComma\": \"none\", // 在对象或数组最后一个元素后面是否加逗号\n\n/* 每种语言默认的格式化规则 */\n \"[html]\": {\n   \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n },\n \"[css]\": {\n   \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n },\n \"[scss]\": {\n   \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n },\n \"[javascript]\": {\n   \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n },\n \"[vue]\": {\n   \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n },\n \"[json]\": {\n   \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n },\n\n```\n\n- 使用 vuecli 创建项目时，不选择 lint 选项。\n  ![vuecli](../images/vuecli.png)\n- 在项目开发依赖中，加入@vue/cli-plugin-eslint、babel-eslint、eslint、eslint-plugin-vue、prettier、prettier-eslint 依赖\n  ```\n  npm install @vue/cli-plugin-eslint  babel-eslint eslint eslint-plugin-vue prettier prettier-eslint  –-save-dev\n  ```\n- 在项目 package.json 内加入 lint 命令。![图片4.png](../images/lint.png)\n- 开发时，保存文件，即可按 prettier 规则格式化文件，并自动修复可修复的 issue，不能自动修复的，请根据提示，手动修复。\n- 提示：vscode 已设置保存时格式化，但有时并不会格式化文件。已保存的文件还存在报错的，请手动格式化，并修改相应问题后，再次保存。\n- 提交代码前，运行 npm run lint 代码风格检查，确认无误后再进行提交。\n","source":"_posts/vue项目中使用eslint-prettier规范与检查代码.md","raw":"---\ntitle: vue项目中使用eslint+prettier规范与检查代码\ndate: 2020-01-16 17:54:10\ntags:\n---\n\n### 1.前言\n\n> &emsp;&emsp;在团队协作中，为避免低级 Bug、以及团队协作时不同代码风格对彼此造成的困扰与影响，会预先制定编码规范。使用 Lint 工具和代码风格检测工具，则可以辅助编码规范执行，有效控制代码质量。EsLint 则是其中一个很好的工具。\n>\n> EsLint 提供以下支持：\n>\n> - ES6\n> - AngularJS\n> - JSX\n> - Style 检查\n> - 自定义错误和提示\n>\n> EsLint 提供以下几种校验：\n>\n> - 语法错误校验\n> - 不重要或丢失的标点符号，如分号\n> - 未被使用的参数提醒\n> - 漏掉的结束符，如}\n> - 确保样式的统一规则，如 sass 或者 less\n> - 检查变量的命名\n> - 影响性能的代码提醒，如 v-if 和 v-for 同时使用\n\n### 2.eslint 配置\n\n#### 2.1 代码规范\n\n> &emsp;&emsp;本项目基本规范是依托于 vue 官方的 [eslint-plugin-vue](https://github.com/vuejs/eslint-plugin-vue)。并使用 Prettier 格式化代码，使样式与规则保持一致。\n>\n> .eslintrc.js 配置如下：\n\n```\n{\nroot: true, // 当前配置为根配置，将不再从上级文件夹查找配置\nparserOptions: {\n  parser: 'babel-eslint',  // 采用 babel-eslint 作为语法解析器\n  sourceType: 'module',   // 指定来源的类型，有两种script或module\n  ecmaVersion: 6, //指定ECMAScript支持的版本，6为ES6\n},\nenv: {\n  browser: true,  // 设置为所需检查的代码是在浏览器环境运行的\n  es6: true  // 设置所需检查代码为 es6 语法书写\n},\nextends: ['plugin:vue/recommended', 'eslint:recommended'],// 扩展使用 vue 检查规则和eslint推荐规则\n  rules: {\n    'vue/attribute-hyphenation': 0, // 忽略属性连字\n    'vue/max-attributes-per-line':[2, { singleline: 10, multiline: { max: 1, allowFirstLine: false } }], // 每行最大属性\n    'vue/singleline-html-element-content-newline': 'off', // 单行html元素内容在新的一行\n    'vue/multiline-html-element-content-newline': 'off', // 多行html元素内容在新的一行\n    'vue/html-closing-bracket-newline': 'off', // html右括号在新的一行\n    'vue/no-v-html': 'off', // 不使用v-html\n    'vue/html-self-closing': 0, // 忽略html标签自闭合\n    'accessor-pairs': 2, // 应同时设置setter和getter\n    'arrow-spacing': [2, { before: true, after: true }], // 箭头间距\n    'vue/require-default-prop': 0, // 不检查默认属性\n    'vue/require-prop-types': 0, // 不检查默认类型\n    'block-spacing': [2, 'always'], // 块间距\n    'brace-style': [2, '1tbs', { allowSingleLine: true }], // 大括号样式允许单行\n    'camelcase': [2, { properties: 'always' }], //为属性强制执行驼峰命名\n    'comma-dangle': [2, 'never'], // 逗号不使用悬挂\n    'comma-spacing': [2, { before: false, after: true }], // 逗号间距\n    'comma-style': [2, 'last'], //（默认）与数组元素，对象属性或变量声明在同一行之后和同一行需要逗号\n    'constructor-super': 2,\n    'consistent-this': [2, 'that'], //强制this别名为that\n    'curly': [2, 'multi-line'], // 当一个块只包含一条语句时，不允许省略花括号。\n    'dot-location': [2, 'property'], //成员表达式中的点应与属性部分位于同一行\n    'eol-last': 2, // 强制文件以换行符结束（LF）\n    'eqeqeq': ['error', 'always', { null: 'ignore' }], // 强制使用全等\n    'generator-star-spacing': [2, { before: true, after: true }], // 生成器中'*'两侧都要有间距\n    'global-require': 1, // 所有调用require()都位于模块的顶层\n    'indent': [2, 2, { SwitchCase: 2 }], //缩进风格\n    'key-spacing': [2, { beforeColon: false, afterColon: true }], // 强制在对象字面量属性中的键和值之间保持一致的间距\n    'keyword-spacing': [2, { before: true, after: true }], // 关键字如if/function等的间距\n    'new-cap': [2, { newIsCap: true, capIsNew: false }],// 允许在没有new操作符的情况下调用大写启动的函数;（默认）要求new使用大写启动函数调用所有操作符\n    'new-parens': 2, // JavaScript通过new关键字调用函数时允许省略括号\n    'no-array-constructor': 1, // 不允许使用Array构造函数。除非要指定生成数组的长度\n    'no-console': process.env.NODE_ENV === 'production' ? 'error' : 'off', // 只有开发环境可以使用console\n    'no-class-assign': 2, // 不允许修改类声明的变量\n    'no-const-assign': 2, // 不能修改使用const关键字声明的变量\n    'no-control-regex': 0, // 不允许正则表达式中的控制字符\n    'no-debugger': process.env.NODE_ENV === 'production' ? 'error' : 'off', // 只有开发环境可以使用debugger\n    'no-delete-var': 2, // 不允许在变量上使用delete操作符\n    'no-dupe-args': 2, // 不允许在函数声明或表达式中使用重复的参数名称\n    'no-dupe-class-members': 2, // 不允许在类成员中使用重复的参数名称\n    'no-dupe-keys': 2, // 不允许在对象文字中使用重复键\n    'no-duplicate-case': 2, // 不允许在switch语句的case子句中使用重复的测试表达式\n    'no-empty-character-class': 2, // 不允许在正则表达式中使用空字符类\n    'no-empty-pattern': 2, // 不允许空块语句\n    'no-eval': 2, // 不允许使用eval\n    'no-ex-assign': 2, // 不允许在catch子句中重新分配例外\n    'no-extend-native': 2, // 不允许直接修改内建对象的原型\n    'no-extra-boolean-cast': 2, // 禁止不必要的布尔转换\n    'no-extra-parens': [2, 'functions'], // 仅在函数表达式附近禁止不必要的括号\n    'no-fallthrough': 2, //消除一个案件无意中掉到另一个案件\n    'no-floating-decimal': 2, //消除浮点小数点，并在数值有小数点但在其之前或之后缺少数字时发出警告\n    'no-func-assign': 2, // 允许重新分配function声明\n    'no-implied-eval': 2, // 消除隐含eval()\n    'no-inner-declarations': [2, 'functions'], // 不允许function嵌套块中的声明\n    'no-invalid-regexp': 2, //不允许RegExp构造函数中的无效正则表达式字符串\n    'no-irregular-whitespace': 2, //捕获无效的空格\n    'no-iterator': 2, //消除阴影变量声明\n    'no-label-var': 2, //禁止创建与范围内的变量共享名称的标签\n    'no-labels': [2, { allowLoop: false, allowSwitch: false }], // 消除 JavaScript 中使用带标签的语句\n    'no-lone-blocks': 2, //消除脚本顶层或其他块中不必要的和可能混淆的块\n    'no-mixed-spaces-and-tabs': 2, // 不允许使用混合空格和制表符进行缩进\n    'no-multi-spaces': 2, // 禁止在逻辑表达式，条件表达式，声明，数组元素，对象属性，序列和函数参数周围使用多个空格\n    'no-multi-str': 2, // 防止使用多行字符串\n    'no-multiple-empty-lines': [2, { max: 1 }], // 最多一个空行\n    'no-native-reassign': 2, // 不允许修改只读全局变量\n    'no-new-object': 2, // 不允许使用Object构造函数\n    'no-new-require': 2, // 消除new require表达的使用\n    'no-new-symbol': 2, // 防止Symbol与new 同时使用的意外错误\n    'no-new-wrappers': 2, // 杜绝使用String，Number以及Boolean与new操作\n    'no-obj-calls': 2, // 不允许调用Math，JSON和Reflect对象作为功能\n    'no-octal': 2, // 不允许使用八进制文字\n    'no-octal-escape': 2, // 不允许字符串文字中的八进制转义序列\n    'no-path-concat': 2, // 防止 Node.js 中的目录路径字符串连接无效\n    'no-redeclare': 2, // 消除在同一范围内具有多个声明的变量\n    'no-regex-spaces': 2, // 在正则表达式文字中不允许有多个空格\n    'no-return-assign': [2, 'except-parens'], // 消除return陈述中的任务，除非用括号括起来\n    'no-self-assign': 2, // 消除自我分配\n    'no-self-compare': 2, // 禁止比较变量与自身\n    'no-sequences': 2, // 禁止使用逗号运算符\n    'no-sparse-arrays': 2, // 不允许稀疏数组文字\n    'no-this-before-super': 2, // 在呼call前标记this/super关键字super()\n    'no-throw-literal': 2, // 不允许抛出不可能是Error对象的文字和其他表达式\n    'no-trailing-spaces': 2, // 不允许在行尾添加尾随空白\n    'no-undef': 2, // 任何对未声明的变量的引用都会导致错误\n    'no-undef-init': 2, // 消除初始化为undefined的变量声明\n    'no-underscore-dangle': 2, // 标识符不能以_开头或结尾\n    'no-unexpected-multiline': 2, // 不允许混淆多行表达式\n    'no-unmodified-loop-condition': 2, // 查找循环条件内的引用，然后检查这些引用的变量是否在循环中被修改\n    'no-unneeded-ternary': [2, { defaultAssignment: false }], // 不允许将条件表达式作为默认的分配模式\n    'no-unreachable': 2, // 不允许可达代码return，throw，continue，和break语句后面还有语句。\n    'no-unsafe-finally': 2, // 不允许return，throw，break，和continue里面的语句finally块\n    'no-unused-vars': [2, { vars: 'all', args: 'after-used' }],\n    // 消除未使用的变量，函数和函数的参数\n    // vars: 'all' 检查所有变量的使用情况，包括全局范围内的变量。这是默认设置。 args: 'after-used'  只有最后一个参数必须使用。例如，这允许您为函数使用两个命名参数，并且只要您使用第二个参数，ESLint 就不会警告您第一个参数。这是默认设置。\n    'no-useless-call': 2, // 标记使用情况，Function.prototype.call()并且Function.prototype.apply()可以用正常的函数调用来替代\n    'no-useless-computed-key': 2, // 禁止不必要地使用计算属性键\n    'no-useless-constructor': 2, // 在不改变类的工作方式的情况下安全地移除的类构造函数\n    'no-useless-escape': 0, // 禁用不必要的转义字符\n    'no-whitespace-before-property': 2, // 如果对象的属性位于同一行上，不允许围绕点或在开头括号之前留出空白\n    'no-with': 2, //禁用with\n    'no-var': 2, // 禁用var\n    'one-var': [2, { initialized: 'never' }], // 强制将变量声明为每个函数（对于var）或块（对于let和const）范围一起声明或单独声明。 initialized: 'never' 每个作用域要求多个变量声明用于初始化变量\n    'operator-linebreak': [2, 'after', { overrides: { '?': 'before', ':': 'before' } }], // 实施一致的换行\n    'padded-blocks': [2, 'never'], // 在块内强制执行一致的空行填充\n    'prefer-destructuring': ['error', { object: false, array: false }], // 此规则强制使用解构而不是通过成员表达式访问属性。\n    'quotes': [2, 'single', { avoidEscape: true, allowTemplateLiterals: true }],// avoidEscape: true 允许字符串使用单引号或双引号，只要字符串包含必须以其他方式转义的引号 ;allowTemplateLiterals: true 允许字符串使用反引号\n    'radix': 2, //parseInt必须指定第二个参数\n    'semi': [2, 'never'], // 不使用分号\n    'semi-spacing': [2, { before: false, after: true }], // 强制分号间隔\n    'space-before-blocks': [2, 'always'], // 块必须至少有一个先前的空间\n    'space-before-function-paren': [2, 'never'], // 在(参数后面不允许任何空格\n    'space-in-parens': [2, 'never'], // 禁止或要求（或）左边的一个或多个空格\n    'space-infix-ops': 2, // 强制二元运算符左右各有一个空格\n    'space-unary-ops': [2, { words: true, nonwords: false }],//  words: true  如：new，delete，typeof，void，yield 左右必须有空格 //  nonwords: false  一元运算符，如：-，+，--，++，!，!!左右不能有空格\n    'spaced-comment': [2, 'always', { markers: ['global', 'globals', 'eslint', 'eslint-disable', '*package', '!', ','] }], // 注释开始后，此规则将强制间距的一致性//或/*\n    'template-curly-spacing': [2, 'never'], // 不允许大括号内的空格\n    'use-isnan': 2, //禁止比较时使用NaN，只能用isNaN()\n    'valid-typeof': 2, //必须使用合法的typeof的值\n    'wrap-iife': [2, 'any'], //立即执行函数表达式的小括号风格\n    'yield-star-spacing': [2, 'both'], // 强制执行*周围 yield*表达式的间距，两侧都必须有空格\n    'yoda': [2, 'never'],\n    'prefer-const': 2, // 使用let关键字声明的变量，但在初始分配后从未重新分配变量，应改为const声明\n    'object-curly-spacing': [2, 'always', { objectsInObjects: false }],// 不允许以对象元素开始和/或以对象元素结尾的对象的大括号内的间距\n    'array-bracket-spacing': [2, 'never'] // 不允许数组括号内的空格\n  }\n}\n\n```\n\n#### 2.2 eslint 安装与配置\n\n- 全局安装 eslint\n  ```\n  npm install -g eslint\n  ```\n- 全局安装 Prettier\n  ```\n  npm install -g prettier\n  ```\n- vscode 插件市场搜索 eslint 和 prettier,下载并安装。\n  ![图片1.png](../images/eslint.png) <br>\n  ![图片2.png](../images/prettier.png)\n- vscode 编辑器 setting.json 中加如下配置：\n\n```\n/* 开启保存时自动格式化 */\n\"editor.formatOnSave\": true,\n\n/* eslint的配置 */\n\"eslint.enable\": true,\n\"eslint.run\": \"onSave\",\n\"eslint.options\": {\n   \"extensions\": [\n     \".js\",\n     \".vue\"\n   ]\n },\n \"editor.codeActionsOnSave\": {\n   \"source.fixAll.eslint\": true // 保存时自动修复\n },\n // 关闭 vscode 默认的检查工具\n \"html.validate.scripts\": false,\n \"javascript.validate.enable\": false,\n \"eslint.alwaysShowStatus\": true,\n \"eslint.format.enable\": true,\n \"scss.lint.duplicateProperties\": \"error\",\n \"css.lint.duplicateProperties\": \"error\",\n \"less.lint.zeroUnits\": \"error\",\n \"eslint.validate\": [\n   \"javascript\",\n   \"javascriptreact\",\n   \"vue-html\",\n   \"vue\",\n   \"html\"\n ],\n\n/*  prettier的配置 */\n \"prettier.printWidth\": 120, // 超过最大值换行\n \"prettier.tabWidth\": 2, // 缩进字节数\n \"prettier.useTabs\": true, // 缩进使用tab\n \"prettier.semi\": false, // 句尾添加分号\n \"prettier.singleQuote\": true, // 使用单引号代替双引号\n \"prettier.proseWrap\": \"preserve\", // 默认值。因为使用了一些折行敏感型的渲染器（如GitHub comment）而按照markdown文本样式进行折行\n \"prettier.arrowParens\": \"avoid\", //  (x) => {} 箭头函数参数只有一个时是否要有小括号。avoid：省略括号\n \"prettier.bracketSpacing\": true, // 在对象，数组括号与文字之间加空格 \"{ foo: bar }\"\n \"prettier.endOfLine\": \"auto\", // 结尾是 \\n \\r \\n\\r auto\n \"prettier.htmlWhitespaceSensitivity\": \"ignore\",\n \"prettier.ignorePath\": \".prettierignore\", // 不使用prettier格式化的文件填写在项目的.prettierignore文件中\n \"prettier.requireConfig\": false, // Require a \"prettierconfig\" to format prettier\n \"prettier.trailingComma\": \"none\", // 在对象或数组最后一个元素后面是否加逗号\n\n/* 每种语言默认的格式化规则 */\n \"[html]\": {\n   \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n },\n \"[css]\": {\n   \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n },\n \"[scss]\": {\n   \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n },\n \"[javascript]\": {\n   \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n },\n \"[vue]\": {\n   \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n },\n \"[json]\": {\n   \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n },\n\n```\n\n- 使用 vuecli 创建项目时，不选择 lint 选项。\n  ![vuecli](../images/vuecli.png)\n- 在项目开发依赖中，加入@vue/cli-plugin-eslint、babel-eslint、eslint、eslint-plugin-vue、prettier、prettier-eslint 依赖\n  ```\n  npm install @vue/cli-plugin-eslint  babel-eslint eslint eslint-plugin-vue prettier prettier-eslint  –-save-dev\n  ```\n- 在项目 package.json 内加入 lint 命令。![图片4.png](../images/lint.png)\n- 开发时，保存文件，即可按 prettier 规则格式化文件，并自动修复可修复的 issue，不能自动修复的，请根据提示，手动修复。\n- 提示：vscode 已设置保存时格式化，但有时并不会格式化文件。已保存的文件还存在报错的，请手动格式化，并修改相应问题后，再次保存。\n- 提交代码前，运行 npm run lint 代码风格检查，确认无误后再进行提交。\n","slug":"vue项目中使用eslint-prettier规范与检查代码","published":1,"updated":"2020-01-17T05:42:10.665Z","_id":"ck5hqi4jl0001egw26bhjb71h","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1.前言\"></a>1.前言</h3><blockquote>\n<p>&emsp;&emsp;在团队协作中，为避免低级 Bug、以及团队协作时不同代码风格对彼此造成的困扰与影响，会预先制定编码规范。使用 Lint 工具和代码风格检测工具，则可以辅助编码规范执行，有效控制代码质量。EsLint 则是其中一个很好的工具。</p>\n<p>EsLint 提供以下支持：</p>\n<ul>\n<li>ES6</li>\n<li>AngularJS</li>\n<li>JSX</li>\n<li>Style 检查</li>\n<li>自定义错误和提示</li>\n</ul>\n<p>EsLint 提供以下几种校验：</p>\n<ul>\n<li>语法错误校验</li>\n<li>不重要或丢失的标点符号，如分号</li>\n<li>未被使用的参数提醒</li>\n<li>漏掉的结束符，如}</li>\n<li>确保样式的统一规则，如 sass 或者 less</li>\n<li>检查变量的命名</li>\n<li>影响性能的代码提醒，如 v-if 和 v-for 同时使用</li>\n</ul>\n</blockquote>\n<h3 id=\"2-eslint-配置\"><a href=\"#2-eslint-配置\" class=\"headerlink\" title=\"2.eslint 配置\"></a>2.eslint 配置</h3><h4 id=\"2-1-代码规范\"><a href=\"#2-1-代码规范\" class=\"headerlink\" title=\"2.1 代码规范\"></a>2.1 代码规范</h4><blockquote>\n<p>&emsp;&emsp;本项目基本规范是依托于 vue 官方的 <a href=\"https://github.com/vuejs/eslint-plugin-vue\" target=\"_blank\" rel=\"noopener\">eslint-plugin-vue</a>。并使用 Prettier 格式化代码，使样式与规则保持一致。</p>\n<p>.eslintrc.js 配置如下：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">root: true, &#x2F;&#x2F; 当前配置为根配置，将不再从上级文件夹查找配置</span><br><span class=\"line\">parserOptions: &#123;</span><br><span class=\"line\">  parser: &#39;babel-eslint&#39;,  &#x2F;&#x2F; 采用 babel-eslint 作为语法解析器</span><br><span class=\"line\">  sourceType: &#39;module&#39;,   &#x2F;&#x2F; 指定来源的类型，有两种script或module</span><br><span class=\"line\">  ecmaVersion: 6, &#x2F;&#x2F;指定ECMAScript支持的版本，6为ES6</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">env: &#123;</span><br><span class=\"line\">  browser: true,  &#x2F;&#x2F; 设置为所需检查的代码是在浏览器环境运行的</span><br><span class=\"line\">  es6: true  &#x2F;&#x2F; 设置所需检查代码为 es6 语法书写</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">extends: [&#39;plugin:vue&#x2F;recommended&#39;, &#39;eslint:recommended&#39;],&#x2F;&#x2F; 扩展使用 vue 检查规则和eslint推荐规则</span><br><span class=\"line\">  rules: &#123;</span><br><span class=\"line\">    &#39;vue&#x2F;attribute-hyphenation&#39;: 0, &#x2F;&#x2F; 忽略属性连字</span><br><span class=\"line\">    &#39;vue&#x2F;max-attributes-per-line&#39;:[2, &#123; singleline: 10, multiline: &#123; max: 1, allowFirstLine: false &#125; &#125;], &#x2F;&#x2F; 每行最大属性</span><br><span class=\"line\">    &#39;vue&#x2F;singleline-html-element-content-newline&#39;: &#39;off&#39;, &#x2F;&#x2F; 单行html元素内容在新的一行</span><br><span class=\"line\">    &#39;vue&#x2F;multiline-html-element-content-newline&#39;: &#39;off&#39;, &#x2F;&#x2F; 多行html元素内容在新的一行</span><br><span class=\"line\">    &#39;vue&#x2F;html-closing-bracket-newline&#39;: &#39;off&#39;, &#x2F;&#x2F; html右括号在新的一行</span><br><span class=\"line\">    &#39;vue&#x2F;no-v-html&#39;: &#39;off&#39;, &#x2F;&#x2F; 不使用v-html</span><br><span class=\"line\">    &#39;vue&#x2F;html-self-closing&#39;: 0, &#x2F;&#x2F; 忽略html标签自闭合</span><br><span class=\"line\">    &#39;accessor-pairs&#39;: 2, &#x2F;&#x2F; 应同时设置setter和getter</span><br><span class=\"line\">    &#39;arrow-spacing&#39;: [2, &#123; before: true, after: true &#125;], &#x2F;&#x2F; 箭头间距</span><br><span class=\"line\">    &#39;vue&#x2F;require-default-prop&#39;: 0, &#x2F;&#x2F; 不检查默认属性</span><br><span class=\"line\">    &#39;vue&#x2F;require-prop-types&#39;: 0, &#x2F;&#x2F; 不检查默认类型</span><br><span class=\"line\">    &#39;block-spacing&#39;: [2, &#39;always&#39;], &#x2F;&#x2F; 块间距</span><br><span class=\"line\">    &#39;brace-style&#39;: [2, &#39;1tbs&#39;, &#123; allowSingleLine: true &#125;], &#x2F;&#x2F; 大括号样式允许单行</span><br><span class=\"line\">    &#39;camelcase&#39;: [2, &#123; properties: &#39;always&#39; &#125;], &#x2F;&#x2F;为属性强制执行驼峰命名</span><br><span class=\"line\">    &#39;comma-dangle&#39;: [2, &#39;never&#39;], &#x2F;&#x2F; 逗号不使用悬挂</span><br><span class=\"line\">    &#39;comma-spacing&#39;: [2, &#123; before: false, after: true &#125;], &#x2F;&#x2F; 逗号间距</span><br><span class=\"line\">    &#39;comma-style&#39;: [2, &#39;last&#39;], &#x2F;&#x2F;（默认）与数组元素，对象属性或变量声明在同一行之后和同一行需要逗号</span><br><span class=\"line\">    &#39;constructor-super&#39;: 2,</span><br><span class=\"line\">    &#39;consistent-this&#39;: [2, &#39;that&#39;], &#x2F;&#x2F;强制this别名为that</span><br><span class=\"line\">    &#39;curly&#39;: [2, &#39;multi-line&#39;], &#x2F;&#x2F; 当一个块只包含一条语句时，不允许省略花括号。</span><br><span class=\"line\">    &#39;dot-location&#39;: [2, &#39;property&#39;], &#x2F;&#x2F;成员表达式中的点应与属性部分位于同一行</span><br><span class=\"line\">    &#39;eol-last&#39;: 2, &#x2F;&#x2F; 强制文件以换行符结束（LF）</span><br><span class=\"line\">    &#39;eqeqeq&#39;: [&#39;error&#39;, &#39;always&#39;, &#123; null: &#39;ignore&#39; &#125;], &#x2F;&#x2F; 强制使用全等</span><br><span class=\"line\">    &#39;generator-star-spacing&#39;: [2, &#123; before: true, after: true &#125;], &#x2F;&#x2F; 生成器中&#39;*&#39;两侧都要有间距</span><br><span class=\"line\">    &#39;global-require&#39;: 1, &#x2F;&#x2F; 所有调用require()都位于模块的顶层</span><br><span class=\"line\">    &#39;indent&#39;: [2, 2, &#123; SwitchCase: 2 &#125;], &#x2F;&#x2F;缩进风格</span><br><span class=\"line\">    &#39;key-spacing&#39;: [2, &#123; beforeColon: false, afterColon: true &#125;], &#x2F;&#x2F; 强制在对象字面量属性中的键和值之间保持一致的间距</span><br><span class=\"line\">    &#39;keyword-spacing&#39;: [2, &#123; before: true, after: true &#125;], &#x2F;&#x2F; 关键字如if&#x2F;function等的间距</span><br><span class=\"line\">    &#39;new-cap&#39;: [2, &#123; newIsCap: true, capIsNew: false &#125;],&#x2F;&#x2F; 允许在没有new操作符的情况下调用大写启动的函数;（默认）要求new使用大写启动函数调用所有操作符</span><br><span class=\"line\">    &#39;new-parens&#39;: 2, &#x2F;&#x2F; JavaScript通过new关键字调用函数时允许省略括号</span><br><span class=\"line\">    &#39;no-array-constructor&#39;: 1, &#x2F;&#x2F; 不允许使用Array构造函数。除非要指定生成数组的长度</span><br><span class=\"line\">    &#39;no-console&#39;: process.env.NODE_ENV &#x3D;&#x3D;&#x3D; &#39;production&#39; ? &#39;error&#39; : &#39;off&#39;, &#x2F;&#x2F; 只有开发环境可以使用console</span><br><span class=\"line\">    &#39;no-class-assign&#39;: 2, &#x2F;&#x2F; 不允许修改类声明的变量</span><br><span class=\"line\">    &#39;no-const-assign&#39;: 2, &#x2F;&#x2F; 不能修改使用const关键字声明的变量</span><br><span class=\"line\">    &#39;no-control-regex&#39;: 0, &#x2F;&#x2F; 不允许正则表达式中的控制字符</span><br><span class=\"line\">    &#39;no-debugger&#39;: process.env.NODE_ENV &#x3D;&#x3D;&#x3D; &#39;production&#39; ? &#39;error&#39; : &#39;off&#39;, &#x2F;&#x2F; 只有开发环境可以使用debugger</span><br><span class=\"line\">    &#39;no-delete-var&#39;: 2, &#x2F;&#x2F; 不允许在变量上使用delete操作符</span><br><span class=\"line\">    &#39;no-dupe-args&#39;: 2, &#x2F;&#x2F; 不允许在函数声明或表达式中使用重复的参数名称</span><br><span class=\"line\">    &#39;no-dupe-class-members&#39;: 2, &#x2F;&#x2F; 不允许在类成员中使用重复的参数名称</span><br><span class=\"line\">    &#39;no-dupe-keys&#39;: 2, &#x2F;&#x2F; 不允许在对象文字中使用重复键</span><br><span class=\"line\">    &#39;no-duplicate-case&#39;: 2, &#x2F;&#x2F; 不允许在switch语句的case子句中使用重复的测试表达式</span><br><span class=\"line\">    &#39;no-empty-character-class&#39;: 2, &#x2F;&#x2F; 不允许在正则表达式中使用空字符类</span><br><span class=\"line\">    &#39;no-empty-pattern&#39;: 2, &#x2F;&#x2F; 不允许空块语句</span><br><span class=\"line\">    &#39;no-eval&#39;: 2, &#x2F;&#x2F; 不允许使用eval</span><br><span class=\"line\">    &#39;no-ex-assign&#39;: 2, &#x2F;&#x2F; 不允许在catch子句中重新分配例外</span><br><span class=\"line\">    &#39;no-extend-native&#39;: 2, &#x2F;&#x2F; 不允许直接修改内建对象的原型</span><br><span class=\"line\">    &#39;no-extra-boolean-cast&#39;: 2, &#x2F;&#x2F; 禁止不必要的布尔转换</span><br><span class=\"line\">    &#39;no-extra-parens&#39;: [2, &#39;functions&#39;], &#x2F;&#x2F; 仅在函数表达式附近禁止不必要的括号</span><br><span class=\"line\">    &#39;no-fallthrough&#39;: 2, &#x2F;&#x2F;消除一个案件无意中掉到另一个案件</span><br><span class=\"line\">    &#39;no-floating-decimal&#39;: 2, &#x2F;&#x2F;消除浮点小数点，并在数值有小数点但在其之前或之后缺少数字时发出警告</span><br><span class=\"line\">    &#39;no-func-assign&#39;: 2, &#x2F;&#x2F; 允许重新分配function声明</span><br><span class=\"line\">    &#39;no-implied-eval&#39;: 2, &#x2F;&#x2F; 消除隐含eval()</span><br><span class=\"line\">    &#39;no-inner-declarations&#39;: [2, &#39;functions&#39;], &#x2F;&#x2F; 不允许function嵌套块中的声明</span><br><span class=\"line\">    &#39;no-invalid-regexp&#39;: 2, &#x2F;&#x2F;不允许RegExp构造函数中的无效正则表达式字符串</span><br><span class=\"line\">    &#39;no-irregular-whitespace&#39;: 2, &#x2F;&#x2F;捕获无效的空格</span><br><span class=\"line\">    &#39;no-iterator&#39;: 2, &#x2F;&#x2F;消除阴影变量声明</span><br><span class=\"line\">    &#39;no-label-var&#39;: 2, &#x2F;&#x2F;禁止创建与范围内的变量共享名称的标签</span><br><span class=\"line\">    &#39;no-labels&#39;: [2, &#123; allowLoop: false, allowSwitch: false &#125;], &#x2F;&#x2F; 消除 JavaScript 中使用带标签的语句</span><br><span class=\"line\">    &#39;no-lone-blocks&#39;: 2, &#x2F;&#x2F;消除脚本顶层或其他块中不必要的和可能混淆的块</span><br><span class=\"line\">    &#39;no-mixed-spaces-and-tabs&#39;: 2, &#x2F;&#x2F; 不允许使用混合空格和制表符进行缩进</span><br><span class=\"line\">    &#39;no-multi-spaces&#39;: 2, &#x2F;&#x2F; 禁止在逻辑表达式，条件表达式，声明，数组元素，对象属性，序列和函数参数周围使用多个空格</span><br><span class=\"line\">    &#39;no-multi-str&#39;: 2, &#x2F;&#x2F; 防止使用多行字符串</span><br><span class=\"line\">    &#39;no-multiple-empty-lines&#39;: [2, &#123; max: 1 &#125;], &#x2F;&#x2F; 最多一个空行</span><br><span class=\"line\">    &#39;no-native-reassign&#39;: 2, &#x2F;&#x2F; 不允许修改只读全局变量</span><br><span class=\"line\">    &#39;no-new-object&#39;: 2, &#x2F;&#x2F; 不允许使用Object构造函数</span><br><span class=\"line\">    &#39;no-new-require&#39;: 2, &#x2F;&#x2F; 消除new require表达的使用</span><br><span class=\"line\">    &#39;no-new-symbol&#39;: 2, &#x2F;&#x2F; 防止Symbol与new 同时使用的意外错误</span><br><span class=\"line\">    &#39;no-new-wrappers&#39;: 2, &#x2F;&#x2F; 杜绝使用String，Number以及Boolean与new操作</span><br><span class=\"line\">    &#39;no-obj-calls&#39;: 2, &#x2F;&#x2F; 不允许调用Math，JSON和Reflect对象作为功能</span><br><span class=\"line\">    &#39;no-octal&#39;: 2, &#x2F;&#x2F; 不允许使用八进制文字</span><br><span class=\"line\">    &#39;no-octal-escape&#39;: 2, &#x2F;&#x2F; 不允许字符串文字中的八进制转义序列</span><br><span class=\"line\">    &#39;no-path-concat&#39;: 2, &#x2F;&#x2F; 防止 Node.js 中的目录路径字符串连接无效</span><br><span class=\"line\">    &#39;no-redeclare&#39;: 2, &#x2F;&#x2F; 消除在同一范围内具有多个声明的变量</span><br><span class=\"line\">    &#39;no-regex-spaces&#39;: 2, &#x2F;&#x2F; 在正则表达式文字中不允许有多个空格</span><br><span class=\"line\">    &#39;no-return-assign&#39;: [2, &#39;except-parens&#39;], &#x2F;&#x2F; 消除return陈述中的任务，除非用括号括起来</span><br><span class=\"line\">    &#39;no-self-assign&#39;: 2, &#x2F;&#x2F; 消除自我分配</span><br><span class=\"line\">    &#39;no-self-compare&#39;: 2, &#x2F;&#x2F; 禁止比较变量与自身</span><br><span class=\"line\">    &#39;no-sequences&#39;: 2, &#x2F;&#x2F; 禁止使用逗号运算符</span><br><span class=\"line\">    &#39;no-sparse-arrays&#39;: 2, &#x2F;&#x2F; 不允许稀疏数组文字</span><br><span class=\"line\">    &#39;no-this-before-super&#39;: 2, &#x2F;&#x2F; 在呼call前标记this&#x2F;super关键字super()</span><br><span class=\"line\">    &#39;no-throw-literal&#39;: 2, &#x2F;&#x2F; 不允许抛出不可能是Error对象的文字和其他表达式</span><br><span class=\"line\">    &#39;no-trailing-spaces&#39;: 2, &#x2F;&#x2F; 不允许在行尾添加尾随空白</span><br><span class=\"line\">    &#39;no-undef&#39;: 2, &#x2F;&#x2F; 任何对未声明的变量的引用都会导致错误</span><br><span class=\"line\">    &#39;no-undef-init&#39;: 2, &#x2F;&#x2F; 消除初始化为undefined的变量声明</span><br><span class=\"line\">    &#39;no-underscore-dangle&#39;: 2, &#x2F;&#x2F; 标识符不能以_开头或结尾</span><br><span class=\"line\">    &#39;no-unexpected-multiline&#39;: 2, &#x2F;&#x2F; 不允许混淆多行表达式</span><br><span class=\"line\">    &#39;no-unmodified-loop-condition&#39;: 2, &#x2F;&#x2F; 查找循环条件内的引用，然后检查这些引用的变量是否在循环中被修改</span><br><span class=\"line\">    &#39;no-unneeded-ternary&#39;: [2, &#123; defaultAssignment: false &#125;], &#x2F;&#x2F; 不允许将条件表达式作为默认的分配模式</span><br><span class=\"line\">    &#39;no-unreachable&#39;: 2, &#x2F;&#x2F; 不允许可达代码return，throw，continue，和break语句后面还有语句。</span><br><span class=\"line\">    &#39;no-unsafe-finally&#39;: 2, &#x2F;&#x2F; 不允许return，throw，break，和continue里面的语句finally块</span><br><span class=\"line\">    &#39;no-unused-vars&#39;: [2, &#123; vars: &#39;all&#39;, args: &#39;after-used&#39; &#125;],</span><br><span class=\"line\">    &#x2F;&#x2F; 消除未使用的变量，函数和函数的参数</span><br><span class=\"line\">    &#x2F;&#x2F; vars: &#39;all&#39; 检查所有变量的使用情况，包括全局范围内的变量。这是默认设置。 args: &#39;after-used&#39;  只有最后一个参数必须使用。例如，这允许您为函数使用两个命名参数，并且只要您使用第二个参数，ESLint 就不会警告您第一个参数。这是默认设置。</span><br><span class=\"line\">    &#39;no-useless-call&#39;: 2, &#x2F;&#x2F; 标记使用情况，Function.prototype.call()并且Function.prototype.apply()可以用正常的函数调用来替代</span><br><span class=\"line\">    &#39;no-useless-computed-key&#39;: 2, &#x2F;&#x2F; 禁止不必要地使用计算属性键</span><br><span class=\"line\">    &#39;no-useless-constructor&#39;: 2, &#x2F;&#x2F; 在不改变类的工作方式的情况下安全地移除的类构造函数</span><br><span class=\"line\">    &#39;no-useless-escape&#39;: 0, &#x2F;&#x2F; 禁用不必要的转义字符</span><br><span class=\"line\">    &#39;no-whitespace-before-property&#39;: 2, &#x2F;&#x2F; 如果对象的属性位于同一行上，不允许围绕点或在开头括号之前留出空白</span><br><span class=\"line\">    &#39;no-with&#39;: 2, &#x2F;&#x2F;禁用with</span><br><span class=\"line\">    &#39;no-var&#39;: 2, &#x2F;&#x2F; 禁用var</span><br><span class=\"line\">    &#39;one-var&#39;: [2, &#123; initialized: &#39;never&#39; &#125;], &#x2F;&#x2F; 强制将变量声明为每个函数（对于var）或块（对于let和const）范围一起声明或单独声明。 initialized: &#39;never&#39; 每个作用域要求多个变量声明用于初始化变量</span><br><span class=\"line\">    &#39;operator-linebreak&#39;: [2, &#39;after&#39;, &#123; overrides: &#123; &#39;?&#39;: &#39;before&#39;, &#39;:&#39;: &#39;before&#39; &#125; &#125;], &#x2F;&#x2F; 实施一致的换行</span><br><span class=\"line\">    &#39;padded-blocks&#39;: [2, &#39;never&#39;], &#x2F;&#x2F; 在块内强制执行一致的空行填充</span><br><span class=\"line\">    &#39;prefer-destructuring&#39;: [&#39;error&#39;, &#123; object: false, array: false &#125;], &#x2F;&#x2F; 此规则强制使用解构而不是通过成员表达式访问属性。</span><br><span class=\"line\">    &#39;quotes&#39;: [2, &#39;single&#39;, &#123; avoidEscape: true, allowTemplateLiterals: true &#125;],&#x2F;&#x2F; avoidEscape: true 允许字符串使用单引号或双引号，只要字符串包含必须以其他方式转义的引号 ;allowTemplateLiterals: true 允许字符串使用反引号</span><br><span class=\"line\">    &#39;radix&#39;: 2, &#x2F;&#x2F;parseInt必须指定第二个参数</span><br><span class=\"line\">    &#39;semi&#39;: [2, &#39;never&#39;], &#x2F;&#x2F; 不使用分号</span><br><span class=\"line\">    &#39;semi-spacing&#39;: [2, &#123; before: false, after: true &#125;], &#x2F;&#x2F; 强制分号间隔</span><br><span class=\"line\">    &#39;space-before-blocks&#39;: [2, &#39;always&#39;], &#x2F;&#x2F; 块必须至少有一个先前的空间</span><br><span class=\"line\">    &#39;space-before-function-paren&#39;: [2, &#39;never&#39;], &#x2F;&#x2F; 在(参数后面不允许任何空格</span><br><span class=\"line\">    &#39;space-in-parens&#39;: [2, &#39;never&#39;], &#x2F;&#x2F; 禁止或要求（或）左边的一个或多个空格</span><br><span class=\"line\">    &#39;space-infix-ops&#39;: 2, &#x2F;&#x2F; 强制二元运算符左右各有一个空格</span><br><span class=\"line\">    &#39;space-unary-ops&#39;: [2, &#123; words: true, nonwords: false &#125;],&#x2F;&#x2F;  words: true  如：new，delete，typeof，void，yield 左右必须有空格 &#x2F;&#x2F;  nonwords: false  一元运算符，如：-，+，--，++，!，!!左右不能有空格</span><br><span class=\"line\">    &#39;spaced-comment&#39;: [2, &#39;always&#39;, &#123; markers: [&#39;global&#39;, &#39;globals&#39;, &#39;eslint&#39;, &#39;eslint-disable&#39;, &#39;*package&#39;, &#39;!&#39;, &#39;,&#39;] &#125;], &#x2F;&#x2F; 注释开始后，此规则将强制间距的一致性&#x2F;&#x2F;或&#x2F;*</span><br><span class=\"line\">    &#39;template-curly-spacing&#39;: [2, &#39;never&#39;], &#x2F;&#x2F; 不允许大括号内的空格</span><br><span class=\"line\">    &#39;use-isnan&#39;: 2, &#x2F;&#x2F;禁止比较时使用NaN，只能用isNaN()</span><br><span class=\"line\">    &#39;valid-typeof&#39;: 2, &#x2F;&#x2F;必须使用合法的typeof的值</span><br><span class=\"line\">    &#39;wrap-iife&#39;: [2, &#39;any&#39;], &#x2F;&#x2F;立即执行函数表达式的小括号风格</span><br><span class=\"line\">    &#39;yield-star-spacing&#39;: [2, &#39;both&#39;], &#x2F;&#x2F; 强制执行*周围 yield*表达式的间距，两侧都必须有空格</span><br><span class=\"line\">    &#39;yoda&#39;: [2, &#39;never&#39;],</span><br><span class=\"line\">    &#39;prefer-const&#39;: 2, &#x2F;&#x2F; 使用let关键字声明的变量，但在初始分配后从未重新分配变量，应改为const声明</span><br><span class=\"line\">    &#39;object-curly-spacing&#39;: [2, &#39;always&#39;, &#123; objectsInObjects: false &#125;],&#x2F;&#x2F; 不允许以对象元素开始和&#x2F;或以对象元素结尾的对象的大括号内的间距</span><br><span class=\"line\">    &#39;array-bracket-spacing&#39;: [2, &#39;never&#39;] &#x2F;&#x2F; 不允许数组括号内的空格</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-eslint-安装与配置\"><a href=\"#2-2-eslint-安装与配置\" class=\"headerlink\" title=\"2.2 eslint 安装与配置\"></a>2.2 eslint 安装与配置</h4><ul>\n<li>全局安装 eslint<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g eslint</span><br></pre></td></tr></table></figure></li>\n<li>全局安装 Prettier<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g prettier</span><br></pre></td></tr></table></figure></li>\n<li>vscode 插件市场搜索 eslint 和 prettier,下载并安装。<br><img src=\"../images/eslint.png\" alt=\"图片1.png\"> <br><br><img src=\"../images/prettier.png\" alt=\"图片2.png\"></li>\n<li>vscode 编辑器 setting.json 中加如下配置：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;* 开启保存时自动格式化 *&#x2F;</span><br><span class=\"line\">&quot;editor.formatOnSave&quot;: true,</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;* eslint的配置 *&#x2F;</span><br><span class=\"line\">&quot;eslint.enable&quot;: true,</span><br><span class=\"line\">&quot;eslint.run&quot;: &quot;onSave&quot;,</span><br><span class=\"line\">&quot;eslint.options&quot;: &#123;</span><br><span class=\"line\">   &quot;extensions&quot;: [</span><br><span class=\"line\">     &quot;.js&quot;,</span><br><span class=\"line\">     &quot;.vue&quot;</span><br><span class=\"line\">   ]</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"> &quot;editor.codeActionsOnSave&quot;: &#123;</span><br><span class=\"line\">   &quot;source.fixAll.eslint&quot;: true &#x2F;&#x2F; 保存时自动修复</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"> &#x2F;&#x2F; 关闭 vscode 默认的检查工具</span><br><span class=\"line\"> &quot;html.validate.scripts&quot;: false,</span><br><span class=\"line\"> &quot;javascript.validate.enable&quot;: false,</span><br><span class=\"line\"> &quot;eslint.alwaysShowStatus&quot;: true,</span><br><span class=\"line\"> &quot;eslint.format.enable&quot;: true,</span><br><span class=\"line\"> &quot;scss.lint.duplicateProperties&quot;: &quot;error&quot;,</span><br><span class=\"line\"> &quot;css.lint.duplicateProperties&quot;: &quot;error&quot;,</span><br><span class=\"line\"> &quot;less.lint.zeroUnits&quot;: &quot;error&quot;,</span><br><span class=\"line\"> &quot;eslint.validate&quot;: [</span><br><span class=\"line\">   &quot;javascript&quot;,</span><br><span class=\"line\">   &quot;javascriptreact&quot;,</span><br><span class=\"line\">   &quot;vue-html&quot;,</span><br><span class=\"line\">   &quot;vue&quot;,</span><br><span class=\"line\">   &quot;html&quot;</span><br><span class=\"line\"> ],</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;*  prettier的配置 *&#x2F;</span><br><span class=\"line\"> &quot;prettier.printWidth&quot;: 120, &#x2F;&#x2F; 超过最大值换行</span><br><span class=\"line\"> &quot;prettier.tabWidth&quot;: 2, &#x2F;&#x2F; 缩进字节数</span><br><span class=\"line\"> &quot;prettier.useTabs&quot;: true, &#x2F;&#x2F; 缩进使用tab</span><br><span class=\"line\"> &quot;prettier.semi&quot;: false, &#x2F;&#x2F; 句尾添加分号</span><br><span class=\"line\"> &quot;prettier.singleQuote&quot;: true, &#x2F;&#x2F; 使用单引号代替双引号</span><br><span class=\"line\"> &quot;prettier.proseWrap&quot;: &quot;preserve&quot;, &#x2F;&#x2F; 默认值。因为使用了一些折行敏感型的渲染器（如GitHub comment）而按照markdown文本样式进行折行</span><br><span class=\"line\"> &quot;prettier.arrowParens&quot;: &quot;avoid&quot;, &#x2F;&#x2F;  (x) &#x3D;&gt; &#123;&#125; 箭头函数参数只有一个时是否要有小括号。avoid：省略括号</span><br><span class=\"line\"> &quot;prettier.bracketSpacing&quot;: true, &#x2F;&#x2F; 在对象，数组括号与文字之间加空格 &quot;&#123; foo: bar &#125;&quot;</span><br><span class=\"line\"> &quot;prettier.endOfLine&quot;: &quot;auto&quot;, &#x2F;&#x2F; 结尾是 \\n \\r \\n\\r auto</span><br><span class=\"line\"> &quot;prettier.htmlWhitespaceSensitivity&quot;: &quot;ignore&quot;,</span><br><span class=\"line\"> &quot;prettier.ignorePath&quot;: &quot;.prettierignore&quot;, &#x2F;&#x2F; 不使用prettier格式化的文件填写在项目的.prettierignore文件中</span><br><span class=\"line\"> &quot;prettier.requireConfig&quot;: false, &#x2F;&#x2F; Require a &quot;prettierconfig&quot; to format prettier</span><br><span class=\"line\"> &quot;prettier.trailingComma&quot;: &quot;none&quot;, &#x2F;&#x2F; 在对象或数组最后一个元素后面是否加逗号</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;* 每种语言默认的格式化规则 *&#x2F;</span><br><span class=\"line\"> &quot;[html]&quot;: &#123;</span><br><span class=\"line\">   &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"> &quot;[css]&quot;: &#123;</span><br><span class=\"line\">   &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"> &quot;[scss]&quot;: &#123;</span><br><span class=\"line\">   &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"> &quot;[javascript]&quot;: &#123;</span><br><span class=\"line\">   &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"> &quot;[vue]&quot;: &#123;</span><br><span class=\"line\">   &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"> &quot;[json]&quot;: &#123;</span><br><span class=\"line\">   &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>使用 vuecli 创建项目时，不选择 lint 选项。<br><img src=\"../images/vuecli.png\" alt=\"vuecli\"></li>\n<li>在项目开发依赖中，加入@vue/cli-plugin-eslint、babel-eslint、eslint、eslint-plugin-vue、prettier、prettier-eslint 依赖<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install @vue&#x2F;cli-plugin-eslint  babel-eslint eslint eslint-plugin-vue prettier prettier-eslint  –-save-dev</span><br></pre></td></tr></table></figure></li>\n<li>在项目 package.json 内加入 lint 命令。<img src=\"../images/lint.png\" alt=\"图片4.png\"></li>\n<li>开发时，保存文件，即可按 prettier 规则格式化文件，并自动修复可修复的 issue，不能自动修复的，请根据提示，手动修复。</li>\n<li>提示：vscode 已设置保存时格式化，但有时并不会格式化文件。已保存的文件还存在报错的，请手动格式化，并修改相应问题后，再次保存。</li>\n<li>提交代码前，运行 npm run lint 代码风格检查，确认无误后再进行提交。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1.前言\"></a>1.前言</h3><blockquote>\n<p>&emsp;&emsp;在团队协作中，为避免低级 Bug、以及团队协作时不同代码风格对彼此造成的困扰与影响，会预先制定编码规范。使用 Lint 工具和代码风格检测工具，则可以辅助编码规范执行，有效控制代码质量。EsLint 则是其中一个很好的工具。</p>\n<p>EsLint 提供以下支持：</p>\n<ul>\n<li>ES6</li>\n<li>AngularJS</li>\n<li>JSX</li>\n<li>Style 检查</li>\n<li>自定义错误和提示</li>\n</ul>\n<p>EsLint 提供以下几种校验：</p>\n<ul>\n<li>语法错误校验</li>\n<li>不重要或丢失的标点符号，如分号</li>\n<li>未被使用的参数提醒</li>\n<li>漏掉的结束符，如}</li>\n<li>确保样式的统一规则，如 sass 或者 less</li>\n<li>检查变量的命名</li>\n<li>影响性能的代码提醒，如 v-if 和 v-for 同时使用</li>\n</ul>\n</blockquote>\n<h3 id=\"2-eslint-配置\"><a href=\"#2-eslint-配置\" class=\"headerlink\" title=\"2.eslint 配置\"></a>2.eslint 配置</h3><h4 id=\"2-1-代码规范\"><a href=\"#2-1-代码规范\" class=\"headerlink\" title=\"2.1 代码规范\"></a>2.1 代码规范</h4><blockquote>\n<p>&emsp;&emsp;本项目基本规范是依托于 vue 官方的 <a href=\"https://github.com/vuejs/eslint-plugin-vue\" target=\"_blank\" rel=\"noopener\">eslint-plugin-vue</a>。并使用 Prettier 格式化代码，使样式与规则保持一致。</p>\n<p>.eslintrc.js 配置如下：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">root: true, &#x2F;&#x2F; 当前配置为根配置，将不再从上级文件夹查找配置</span><br><span class=\"line\">parserOptions: &#123;</span><br><span class=\"line\">  parser: &#39;babel-eslint&#39;,  &#x2F;&#x2F; 采用 babel-eslint 作为语法解析器</span><br><span class=\"line\">  sourceType: &#39;module&#39;,   &#x2F;&#x2F; 指定来源的类型，有两种script或module</span><br><span class=\"line\">  ecmaVersion: 6, &#x2F;&#x2F;指定ECMAScript支持的版本，6为ES6</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">env: &#123;</span><br><span class=\"line\">  browser: true,  &#x2F;&#x2F; 设置为所需检查的代码是在浏览器环境运行的</span><br><span class=\"line\">  es6: true  &#x2F;&#x2F; 设置所需检查代码为 es6 语法书写</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">extends: [&#39;plugin:vue&#x2F;recommended&#39;, &#39;eslint:recommended&#39;],&#x2F;&#x2F; 扩展使用 vue 检查规则和eslint推荐规则</span><br><span class=\"line\">  rules: &#123;</span><br><span class=\"line\">    &#39;vue&#x2F;attribute-hyphenation&#39;: 0, &#x2F;&#x2F; 忽略属性连字</span><br><span class=\"line\">    &#39;vue&#x2F;max-attributes-per-line&#39;:[2, &#123; singleline: 10, multiline: &#123; max: 1, allowFirstLine: false &#125; &#125;], &#x2F;&#x2F; 每行最大属性</span><br><span class=\"line\">    &#39;vue&#x2F;singleline-html-element-content-newline&#39;: &#39;off&#39;, &#x2F;&#x2F; 单行html元素内容在新的一行</span><br><span class=\"line\">    &#39;vue&#x2F;multiline-html-element-content-newline&#39;: &#39;off&#39;, &#x2F;&#x2F; 多行html元素内容在新的一行</span><br><span class=\"line\">    &#39;vue&#x2F;html-closing-bracket-newline&#39;: &#39;off&#39;, &#x2F;&#x2F; html右括号在新的一行</span><br><span class=\"line\">    &#39;vue&#x2F;no-v-html&#39;: &#39;off&#39;, &#x2F;&#x2F; 不使用v-html</span><br><span class=\"line\">    &#39;vue&#x2F;html-self-closing&#39;: 0, &#x2F;&#x2F; 忽略html标签自闭合</span><br><span class=\"line\">    &#39;accessor-pairs&#39;: 2, &#x2F;&#x2F; 应同时设置setter和getter</span><br><span class=\"line\">    &#39;arrow-spacing&#39;: [2, &#123; before: true, after: true &#125;], &#x2F;&#x2F; 箭头间距</span><br><span class=\"line\">    &#39;vue&#x2F;require-default-prop&#39;: 0, &#x2F;&#x2F; 不检查默认属性</span><br><span class=\"line\">    &#39;vue&#x2F;require-prop-types&#39;: 0, &#x2F;&#x2F; 不检查默认类型</span><br><span class=\"line\">    &#39;block-spacing&#39;: [2, &#39;always&#39;], &#x2F;&#x2F; 块间距</span><br><span class=\"line\">    &#39;brace-style&#39;: [2, &#39;1tbs&#39;, &#123; allowSingleLine: true &#125;], &#x2F;&#x2F; 大括号样式允许单行</span><br><span class=\"line\">    &#39;camelcase&#39;: [2, &#123; properties: &#39;always&#39; &#125;], &#x2F;&#x2F;为属性强制执行驼峰命名</span><br><span class=\"line\">    &#39;comma-dangle&#39;: [2, &#39;never&#39;], &#x2F;&#x2F; 逗号不使用悬挂</span><br><span class=\"line\">    &#39;comma-spacing&#39;: [2, &#123; before: false, after: true &#125;], &#x2F;&#x2F; 逗号间距</span><br><span class=\"line\">    &#39;comma-style&#39;: [2, &#39;last&#39;], &#x2F;&#x2F;（默认）与数组元素，对象属性或变量声明在同一行之后和同一行需要逗号</span><br><span class=\"line\">    &#39;constructor-super&#39;: 2,</span><br><span class=\"line\">    &#39;consistent-this&#39;: [2, &#39;that&#39;], &#x2F;&#x2F;强制this别名为that</span><br><span class=\"line\">    &#39;curly&#39;: [2, &#39;multi-line&#39;], &#x2F;&#x2F; 当一个块只包含一条语句时，不允许省略花括号。</span><br><span class=\"line\">    &#39;dot-location&#39;: [2, &#39;property&#39;], &#x2F;&#x2F;成员表达式中的点应与属性部分位于同一行</span><br><span class=\"line\">    &#39;eol-last&#39;: 2, &#x2F;&#x2F; 强制文件以换行符结束（LF）</span><br><span class=\"line\">    &#39;eqeqeq&#39;: [&#39;error&#39;, &#39;always&#39;, &#123; null: &#39;ignore&#39; &#125;], &#x2F;&#x2F; 强制使用全等</span><br><span class=\"line\">    &#39;generator-star-spacing&#39;: [2, &#123; before: true, after: true &#125;], &#x2F;&#x2F; 生成器中&#39;*&#39;两侧都要有间距</span><br><span class=\"line\">    &#39;global-require&#39;: 1, &#x2F;&#x2F; 所有调用require()都位于模块的顶层</span><br><span class=\"line\">    &#39;indent&#39;: [2, 2, &#123; SwitchCase: 2 &#125;], &#x2F;&#x2F;缩进风格</span><br><span class=\"line\">    &#39;key-spacing&#39;: [2, &#123; beforeColon: false, afterColon: true &#125;], &#x2F;&#x2F; 强制在对象字面量属性中的键和值之间保持一致的间距</span><br><span class=\"line\">    &#39;keyword-spacing&#39;: [2, &#123; before: true, after: true &#125;], &#x2F;&#x2F; 关键字如if&#x2F;function等的间距</span><br><span class=\"line\">    &#39;new-cap&#39;: [2, &#123; newIsCap: true, capIsNew: false &#125;],&#x2F;&#x2F; 允许在没有new操作符的情况下调用大写启动的函数;（默认）要求new使用大写启动函数调用所有操作符</span><br><span class=\"line\">    &#39;new-parens&#39;: 2, &#x2F;&#x2F; JavaScript通过new关键字调用函数时允许省略括号</span><br><span class=\"line\">    &#39;no-array-constructor&#39;: 1, &#x2F;&#x2F; 不允许使用Array构造函数。除非要指定生成数组的长度</span><br><span class=\"line\">    &#39;no-console&#39;: process.env.NODE_ENV &#x3D;&#x3D;&#x3D; &#39;production&#39; ? &#39;error&#39; : &#39;off&#39;, &#x2F;&#x2F; 只有开发环境可以使用console</span><br><span class=\"line\">    &#39;no-class-assign&#39;: 2, &#x2F;&#x2F; 不允许修改类声明的变量</span><br><span class=\"line\">    &#39;no-const-assign&#39;: 2, &#x2F;&#x2F; 不能修改使用const关键字声明的变量</span><br><span class=\"line\">    &#39;no-control-regex&#39;: 0, &#x2F;&#x2F; 不允许正则表达式中的控制字符</span><br><span class=\"line\">    &#39;no-debugger&#39;: process.env.NODE_ENV &#x3D;&#x3D;&#x3D; &#39;production&#39; ? &#39;error&#39; : &#39;off&#39;, &#x2F;&#x2F; 只有开发环境可以使用debugger</span><br><span class=\"line\">    &#39;no-delete-var&#39;: 2, &#x2F;&#x2F; 不允许在变量上使用delete操作符</span><br><span class=\"line\">    &#39;no-dupe-args&#39;: 2, &#x2F;&#x2F; 不允许在函数声明或表达式中使用重复的参数名称</span><br><span class=\"line\">    &#39;no-dupe-class-members&#39;: 2, &#x2F;&#x2F; 不允许在类成员中使用重复的参数名称</span><br><span class=\"line\">    &#39;no-dupe-keys&#39;: 2, &#x2F;&#x2F; 不允许在对象文字中使用重复键</span><br><span class=\"line\">    &#39;no-duplicate-case&#39;: 2, &#x2F;&#x2F; 不允许在switch语句的case子句中使用重复的测试表达式</span><br><span class=\"line\">    &#39;no-empty-character-class&#39;: 2, &#x2F;&#x2F; 不允许在正则表达式中使用空字符类</span><br><span class=\"line\">    &#39;no-empty-pattern&#39;: 2, &#x2F;&#x2F; 不允许空块语句</span><br><span class=\"line\">    &#39;no-eval&#39;: 2, &#x2F;&#x2F; 不允许使用eval</span><br><span class=\"line\">    &#39;no-ex-assign&#39;: 2, &#x2F;&#x2F; 不允许在catch子句中重新分配例外</span><br><span class=\"line\">    &#39;no-extend-native&#39;: 2, &#x2F;&#x2F; 不允许直接修改内建对象的原型</span><br><span class=\"line\">    &#39;no-extra-boolean-cast&#39;: 2, &#x2F;&#x2F; 禁止不必要的布尔转换</span><br><span class=\"line\">    &#39;no-extra-parens&#39;: [2, &#39;functions&#39;], &#x2F;&#x2F; 仅在函数表达式附近禁止不必要的括号</span><br><span class=\"line\">    &#39;no-fallthrough&#39;: 2, &#x2F;&#x2F;消除一个案件无意中掉到另一个案件</span><br><span class=\"line\">    &#39;no-floating-decimal&#39;: 2, &#x2F;&#x2F;消除浮点小数点，并在数值有小数点但在其之前或之后缺少数字时发出警告</span><br><span class=\"line\">    &#39;no-func-assign&#39;: 2, &#x2F;&#x2F; 允许重新分配function声明</span><br><span class=\"line\">    &#39;no-implied-eval&#39;: 2, &#x2F;&#x2F; 消除隐含eval()</span><br><span class=\"line\">    &#39;no-inner-declarations&#39;: [2, &#39;functions&#39;], &#x2F;&#x2F; 不允许function嵌套块中的声明</span><br><span class=\"line\">    &#39;no-invalid-regexp&#39;: 2, &#x2F;&#x2F;不允许RegExp构造函数中的无效正则表达式字符串</span><br><span class=\"line\">    &#39;no-irregular-whitespace&#39;: 2, &#x2F;&#x2F;捕获无效的空格</span><br><span class=\"line\">    &#39;no-iterator&#39;: 2, &#x2F;&#x2F;消除阴影变量声明</span><br><span class=\"line\">    &#39;no-label-var&#39;: 2, &#x2F;&#x2F;禁止创建与范围内的变量共享名称的标签</span><br><span class=\"line\">    &#39;no-labels&#39;: [2, &#123; allowLoop: false, allowSwitch: false &#125;], &#x2F;&#x2F; 消除 JavaScript 中使用带标签的语句</span><br><span class=\"line\">    &#39;no-lone-blocks&#39;: 2, &#x2F;&#x2F;消除脚本顶层或其他块中不必要的和可能混淆的块</span><br><span class=\"line\">    &#39;no-mixed-spaces-and-tabs&#39;: 2, &#x2F;&#x2F; 不允许使用混合空格和制表符进行缩进</span><br><span class=\"line\">    &#39;no-multi-spaces&#39;: 2, &#x2F;&#x2F; 禁止在逻辑表达式，条件表达式，声明，数组元素，对象属性，序列和函数参数周围使用多个空格</span><br><span class=\"line\">    &#39;no-multi-str&#39;: 2, &#x2F;&#x2F; 防止使用多行字符串</span><br><span class=\"line\">    &#39;no-multiple-empty-lines&#39;: [2, &#123; max: 1 &#125;], &#x2F;&#x2F; 最多一个空行</span><br><span class=\"line\">    &#39;no-native-reassign&#39;: 2, &#x2F;&#x2F; 不允许修改只读全局变量</span><br><span class=\"line\">    &#39;no-new-object&#39;: 2, &#x2F;&#x2F; 不允许使用Object构造函数</span><br><span class=\"line\">    &#39;no-new-require&#39;: 2, &#x2F;&#x2F; 消除new require表达的使用</span><br><span class=\"line\">    &#39;no-new-symbol&#39;: 2, &#x2F;&#x2F; 防止Symbol与new 同时使用的意外错误</span><br><span class=\"line\">    &#39;no-new-wrappers&#39;: 2, &#x2F;&#x2F; 杜绝使用String，Number以及Boolean与new操作</span><br><span class=\"line\">    &#39;no-obj-calls&#39;: 2, &#x2F;&#x2F; 不允许调用Math，JSON和Reflect对象作为功能</span><br><span class=\"line\">    &#39;no-octal&#39;: 2, &#x2F;&#x2F; 不允许使用八进制文字</span><br><span class=\"line\">    &#39;no-octal-escape&#39;: 2, &#x2F;&#x2F; 不允许字符串文字中的八进制转义序列</span><br><span class=\"line\">    &#39;no-path-concat&#39;: 2, &#x2F;&#x2F; 防止 Node.js 中的目录路径字符串连接无效</span><br><span class=\"line\">    &#39;no-redeclare&#39;: 2, &#x2F;&#x2F; 消除在同一范围内具有多个声明的变量</span><br><span class=\"line\">    &#39;no-regex-spaces&#39;: 2, &#x2F;&#x2F; 在正则表达式文字中不允许有多个空格</span><br><span class=\"line\">    &#39;no-return-assign&#39;: [2, &#39;except-parens&#39;], &#x2F;&#x2F; 消除return陈述中的任务，除非用括号括起来</span><br><span class=\"line\">    &#39;no-self-assign&#39;: 2, &#x2F;&#x2F; 消除自我分配</span><br><span class=\"line\">    &#39;no-self-compare&#39;: 2, &#x2F;&#x2F; 禁止比较变量与自身</span><br><span class=\"line\">    &#39;no-sequences&#39;: 2, &#x2F;&#x2F; 禁止使用逗号运算符</span><br><span class=\"line\">    &#39;no-sparse-arrays&#39;: 2, &#x2F;&#x2F; 不允许稀疏数组文字</span><br><span class=\"line\">    &#39;no-this-before-super&#39;: 2, &#x2F;&#x2F; 在呼call前标记this&#x2F;super关键字super()</span><br><span class=\"line\">    &#39;no-throw-literal&#39;: 2, &#x2F;&#x2F; 不允许抛出不可能是Error对象的文字和其他表达式</span><br><span class=\"line\">    &#39;no-trailing-spaces&#39;: 2, &#x2F;&#x2F; 不允许在行尾添加尾随空白</span><br><span class=\"line\">    &#39;no-undef&#39;: 2, &#x2F;&#x2F; 任何对未声明的变量的引用都会导致错误</span><br><span class=\"line\">    &#39;no-undef-init&#39;: 2, &#x2F;&#x2F; 消除初始化为undefined的变量声明</span><br><span class=\"line\">    &#39;no-underscore-dangle&#39;: 2, &#x2F;&#x2F; 标识符不能以_开头或结尾</span><br><span class=\"line\">    &#39;no-unexpected-multiline&#39;: 2, &#x2F;&#x2F; 不允许混淆多行表达式</span><br><span class=\"line\">    &#39;no-unmodified-loop-condition&#39;: 2, &#x2F;&#x2F; 查找循环条件内的引用，然后检查这些引用的变量是否在循环中被修改</span><br><span class=\"line\">    &#39;no-unneeded-ternary&#39;: [2, &#123; defaultAssignment: false &#125;], &#x2F;&#x2F; 不允许将条件表达式作为默认的分配模式</span><br><span class=\"line\">    &#39;no-unreachable&#39;: 2, &#x2F;&#x2F; 不允许可达代码return，throw，continue，和break语句后面还有语句。</span><br><span class=\"line\">    &#39;no-unsafe-finally&#39;: 2, &#x2F;&#x2F; 不允许return，throw，break，和continue里面的语句finally块</span><br><span class=\"line\">    &#39;no-unused-vars&#39;: [2, &#123; vars: &#39;all&#39;, args: &#39;after-used&#39; &#125;],</span><br><span class=\"line\">    &#x2F;&#x2F; 消除未使用的变量，函数和函数的参数</span><br><span class=\"line\">    &#x2F;&#x2F; vars: &#39;all&#39; 检查所有变量的使用情况，包括全局范围内的变量。这是默认设置。 args: &#39;after-used&#39;  只有最后一个参数必须使用。例如，这允许您为函数使用两个命名参数，并且只要您使用第二个参数，ESLint 就不会警告您第一个参数。这是默认设置。</span><br><span class=\"line\">    &#39;no-useless-call&#39;: 2, &#x2F;&#x2F; 标记使用情况，Function.prototype.call()并且Function.prototype.apply()可以用正常的函数调用来替代</span><br><span class=\"line\">    &#39;no-useless-computed-key&#39;: 2, &#x2F;&#x2F; 禁止不必要地使用计算属性键</span><br><span class=\"line\">    &#39;no-useless-constructor&#39;: 2, &#x2F;&#x2F; 在不改变类的工作方式的情况下安全地移除的类构造函数</span><br><span class=\"line\">    &#39;no-useless-escape&#39;: 0, &#x2F;&#x2F; 禁用不必要的转义字符</span><br><span class=\"line\">    &#39;no-whitespace-before-property&#39;: 2, &#x2F;&#x2F; 如果对象的属性位于同一行上，不允许围绕点或在开头括号之前留出空白</span><br><span class=\"line\">    &#39;no-with&#39;: 2, &#x2F;&#x2F;禁用with</span><br><span class=\"line\">    &#39;no-var&#39;: 2, &#x2F;&#x2F; 禁用var</span><br><span class=\"line\">    &#39;one-var&#39;: [2, &#123; initialized: &#39;never&#39; &#125;], &#x2F;&#x2F; 强制将变量声明为每个函数（对于var）或块（对于let和const）范围一起声明或单独声明。 initialized: &#39;never&#39; 每个作用域要求多个变量声明用于初始化变量</span><br><span class=\"line\">    &#39;operator-linebreak&#39;: [2, &#39;after&#39;, &#123; overrides: &#123; &#39;?&#39;: &#39;before&#39;, &#39;:&#39;: &#39;before&#39; &#125; &#125;], &#x2F;&#x2F; 实施一致的换行</span><br><span class=\"line\">    &#39;padded-blocks&#39;: [2, &#39;never&#39;], &#x2F;&#x2F; 在块内强制执行一致的空行填充</span><br><span class=\"line\">    &#39;prefer-destructuring&#39;: [&#39;error&#39;, &#123; object: false, array: false &#125;], &#x2F;&#x2F; 此规则强制使用解构而不是通过成员表达式访问属性。</span><br><span class=\"line\">    &#39;quotes&#39;: [2, &#39;single&#39;, &#123; avoidEscape: true, allowTemplateLiterals: true &#125;],&#x2F;&#x2F; avoidEscape: true 允许字符串使用单引号或双引号，只要字符串包含必须以其他方式转义的引号 ;allowTemplateLiterals: true 允许字符串使用反引号</span><br><span class=\"line\">    &#39;radix&#39;: 2, &#x2F;&#x2F;parseInt必须指定第二个参数</span><br><span class=\"line\">    &#39;semi&#39;: [2, &#39;never&#39;], &#x2F;&#x2F; 不使用分号</span><br><span class=\"line\">    &#39;semi-spacing&#39;: [2, &#123; before: false, after: true &#125;], &#x2F;&#x2F; 强制分号间隔</span><br><span class=\"line\">    &#39;space-before-blocks&#39;: [2, &#39;always&#39;], &#x2F;&#x2F; 块必须至少有一个先前的空间</span><br><span class=\"line\">    &#39;space-before-function-paren&#39;: [2, &#39;never&#39;], &#x2F;&#x2F; 在(参数后面不允许任何空格</span><br><span class=\"line\">    &#39;space-in-parens&#39;: [2, &#39;never&#39;], &#x2F;&#x2F; 禁止或要求（或）左边的一个或多个空格</span><br><span class=\"line\">    &#39;space-infix-ops&#39;: 2, &#x2F;&#x2F; 强制二元运算符左右各有一个空格</span><br><span class=\"line\">    &#39;space-unary-ops&#39;: [2, &#123; words: true, nonwords: false &#125;],&#x2F;&#x2F;  words: true  如：new，delete，typeof，void，yield 左右必须有空格 &#x2F;&#x2F;  nonwords: false  一元运算符，如：-，+，--，++，!，!!左右不能有空格</span><br><span class=\"line\">    &#39;spaced-comment&#39;: [2, &#39;always&#39;, &#123; markers: [&#39;global&#39;, &#39;globals&#39;, &#39;eslint&#39;, &#39;eslint-disable&#39;, &#39;*package&#39;, &#39;!&#39;, &#39;,&#39;] &#125;], &#x2F;&#x2F; 注释开始后，此规则将强制间距的一致性&#x2F;&#x2F;或&#x2F;*</span><br><span class=\"line\">    &#39;template-curly-spacing&#39;: [2, &#39;never&#39;], &#x2F;&#x2F; 不允许大括号内的空格</span><br><span class=\"line\">    &#39;use-isnan&#39;: 2, &#x2F;&#x2F;禁止比较时使用NaN，只能用isNaN()</span><br><span class=\"line\">    &#39;valid-typeof&#39;: 2, &#x2F;&#x2F;必须使用合法的typeof的值</span><br><span class=\"line\">    &#39;wrap-iife&#39;: [2, &#39;any&#39;], &#x2F;&#x2F;立即执行函数表达式的小括号风格</span><br><span class=\"line\">    &#39;yield-star-spacing&#39;: [2, &#39;both&#39;], &#x2F;&#x2F; 强制执行*周围 yield*表达式的间距，两侧都必须有空格</span><br><span class=\"line\">    &#39;yoda&#39;: [2, &#39;never&#39;],</span><br><span class=\"line\">    &#39;prefer-const&#39;: 2, &#x2F;&#x2F; 使用let关键字声明的变量，但在初始分配后从未重新分配变量，应改为const声明</span><br><span class=\"line\">    &#39;object-curly-spacing&#39;: [2, &#39;always&#39;, &#123; objectsInObjects: false &#125;],&#x2F;&#x2F; 不允许以对象元素开始和&#x2F;或以对象元素结尾的对象的大括号内的间距</span><br><span class=\"line\">    &#39;array-bracket-spacing&#39;: [2, &#39;never&#39;] &#x2F;&#x2F; 不允许数组括号内的空格</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-2-eslint-安装与配置\"><a href=\"#2-2-eslint-安装与配置\" class=\"headerlink\" title=\"2.2 eslint 安装与配置\"></a>2.2 eslint 安装与配置</h4><ul>\n<li>全局安装 eslint<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g eslint</span><br></pre></td></tr></table></figure></li>\n<li>全局安装 Prettier<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g prettier</span><br></pre></td></tr></table></figure></li>\n<li>vscode 插件市场搜索 eslint 和 prettier,下载并安装。<br><img src=\"../images/eslint.png\" alt=\"图片1.png\"> <br><br><img src=\"../images/prettier.png\" alt=\"图片2.png\"></li>\n<li>vscode 编辑器 setting.json 中加如下配置：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;* 开启保存时自动格式化 *&#x2F;</span><br><span class=\"line\">&quot;editor.formatOnSave&quot;: true,</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;* eslint的配置 *&#x2F;</span><br><span class=\"line\">&quot;eslint.enable&quot;: true,</span><br><span class=\"line\">&quot;eslint.run&quot;: &quot;onSave&quot;,</span><br><span class=\"line\">&quot;eslint.options&quot;: &#123;</span><br><span class=\"line\">   &quot;extensions&quot;: [</span><br><span class=\"line\">     &quot;.js&quot;,</span><br><span class=\"line\">     &quot;.vue&quot;</span><br><span class=\"line\">   ]</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"> &quot;editor.codeActionsOnSave&quot;: &#123;</span><br><span class=\"line\">   &quot;source.fixAll.eslint&quot;: true &#x2F;&#x2F; 保存时自动修复</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"> &#x2F;&#x2F; 关闭 vscode 默认的检查工具</span><br><span class=\"line\"> &quot;html.validate.scripts&quot;: false,</span><br><span class=\"line\"> &quot;javascript.validate.enable&quot;: false,</span><br><span class=\"line\"> &quot;eslint.alwaysShowStatus&quot;: true,</span><br><span class=\"line\"> &quot;eslint.format.enable&quot;: true,</span><br><span class=\"line\"> &quot;scss.lint.duplicateProperties&quot;: &quot;error&quot;,</span><br><span class=\"line\"> &quot;css.lint.duplicateProperties&quot;: &quot;error&quot;,</span><br><span class=\"line\"> &quot;less.lint.zeroUnits&quot;: &quot;error&quot;,</span><br><span class=\"line\"> &quot;eslint.validate&quot;: [</span><br><span class=\"line\">   &quot;javascript&quot;,</span><br><span class=\"line\">   &quot;javascriptreact&quot;,</span><br><span class=\"line\">   &quot;vue-html&quot;,</span><br><span class=\"line\">   &quot;vue&quot;,</span><br><span class=\"line\">   &quot;html&quot;</span><br><span class=\"line\"> ],</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;*  prettier的配置 *&#x2F;</span><br><span class=\"line\"> &quot;prettier.printWidth&quot;: 120, &#x2F;&#x2F; 超过最大值换行</span><br><span class=\"line\"> &quot;prettier.tabWidth&quot;: 2, &#x2F;&#x2F; 缩进字节数</span><br><span class=\"line\"> &quot;prettier.useTabs&quot;: true, &#x2F;&#x2F; 缩进使用tab</span><br><span class=\"line\"> &quot;prettier.semi&quot;: false, &#x2F;&#x2F; 句尾添加分号</span><br><span class=\"line\"> &quot;prettier.singleQuote&quot;: true, &#x2F;&#x2F; 使用单引号代替双引号</span><br><span class=\"line\"> &quot;prettier.proseWrap&quot;: &quot;preserve&quot;, &#x2F;&#x2F; 默认值。因为使用了一些折行敏感型的渲染器（如GitHub comment）而按照markdown文本样式进行折行</span><br><span class=\"line\"> &quot;prettier.arrowParens&quot;: &quot;avoid&quot;, &#x2F;&#x2F;  (x) &#x3D;&gt; &#123;&#125; 箭头函数参数只有一个时是否要有小括号。avoid：省略括号</span><br><span class=\"line\"> &quot;prettier.bracketSpacing&quot;: true, &#x2F;&#x2F; 在对象，数组括号与文字之间加空格 &quot;&#123; foo: bar &#125;&quot;</span><br><span class=\"line\"> &quot;prettier.endOfLine&quot;: &quot;auto&quot;, &#x2F;&#x2F; 结尾是 \\n \\r \\n\\r auto</span><br><span class=\"line\"> &quot;prettier.htmlWhitespaceSensitivity&quot;: &quot;ignore&quot;,</span><br><span class=\"line\"> &quot;prettier.ignorePath&quot;: &quot;.prettierignore&quot;, &#x2F;&#x2F; 不使用prettier格式化的文件填写在项目的.prettierignore文件中</span><br><span class=\"line\"> &quot;prettier.requireConfig&quot;: false, &#x2F;&#x2F; Require a &quot;prettierconfig&quot; to format prettier</span><br><span class=\"line\"> &quot;prettier.trailingComma&quot;: &quot;none&quot;, &#x2F;&#x2F; 在对象或数组最后一个元素后面是否加逗号</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;* 每种语言默认的格式化规则 *&#x2F;</span><br><span class=\"line\"> &quot;[html]&quot;: &#123;</span><br><span class=\"line\">   &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"> &quot;[css]&quot;: &#123;</span><br><span class=\"line\">   &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"> &quot;[scss]&quot;: &#123;</span><br><span class=\"line\">   &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"> &quot;[javascript]&quot;: &#123;</span><br><span class=\"line\">   &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"> &quot;[vue]&quot;: &#123;</span><br><span class=\"line\">   &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;</span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"> &quot;[json]&quot;: &#123;</span><br><span class=\"line\">   &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;</span><br><span class=\"line\"> &#125;,</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>使用 vuecli 创建项目时，不选择 lint 选项。<br><img src=\"../images/vuecli.png\" alt=\"vuecli\"></li>\n<li>在项目开发依赖中，加入@vue/cli-plugin-eslint、babel-eslint、eslint、eslint-plugin-vue、prettier、prettier-eslint 依赖<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install @vue&#x2F;cli-plugin-eslint  babel-eslint eslint eslint-plugin-vue prettier prettier-eslint  –-save-dev</span><br></pre></td></tr></table></figure></li>\n<li>在项目 package.json 内加入 lint 命令。<img src=\"../images/lint.png\" alt=\"图片4.png\"></li>\n<li>开发时，保存文件，即可按 prettier 规则格式化文件，并自动修复可修复的 issue，不能自动修复的，请根据提示，手动修复。</li>\n<li>提示：vscode 已设置保存时格式化，但有时并不会格式化文件。已保存的文件还存在报错的，请手动格式化，并修改相应问题后，再次保存。</li>\n<li>提交代码前，运行 npm run lint 代码风格检查，确认无误后再进行提交。</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}